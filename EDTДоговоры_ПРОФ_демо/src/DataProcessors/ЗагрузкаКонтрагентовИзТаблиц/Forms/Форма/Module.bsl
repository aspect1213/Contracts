#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВозможноЗаполнениеПоИНН =
		(СтандартныеПодсистемыСервер.ПараметрыАутентификацииНаСайте() <> Неопределено);
	Если ВозможноЗаполнениеПоИНН Тогда
		Подсказка = НСтр("ru = 'Скопируйте колонку с ИНН в исходной таблице и вставьте ее сюда. Остальное будет заполнено автоматически.'");
	Иначе
		Подсказка = НСтр("ru = 'Скопируйте колонки с данными в исходной таблице и вставьте их сюда. Не вставляйте заголовки.'");
	КонецЕсли;
	
	Таблица = Обработки.ЗагрузкаКонтрагентовИзТаблиц.ПолучитьМакет("Справочник_Контрагенты");
	Таблица.ФиксацияСверху = 1;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьКонтрагентов(Команда)
	
	КоличествоКонтрагентов = Таблица.ВысотаТаблицы - 1;
	Если КоличествоКонтрагентов <= 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Нет данных для загрузки'"));
		Возврат;
	КонецЕсли;
	
	// Проверим корректность ИНН и заполненность наименований.
	
	КолонкаНаименование = НомерКолонки("Наименование");
	КолонкаИНН = НомерКолонки("ИНН");
	
	ЕстьОшибкиИНН = Ложь;
	ЕстьОшибкиНаименований = Ложь;
	
	Для НомерСтроки = 2 По Таблица.ВысотаТаблицы Цикл
		
		Если Не ЗначениеЗаполнено(ТекстПоАдресу(НомерСтроки, КолонкаНаименование)) Тогда
			Таблица.Область(НомерСтроки, КолонкаНаименование).Примечание.Текст 
				= НСтр("ru = 'Не заполнено сокращенное наименование.'");
			ЕстьОшибкиНаименований = Истина;
		Иначе
			Таблица.Область(НомерСтроки, КолонкаНаименование).Примечание.Текст = "";
		КонецЕсли;
		
		ИНН = ТекстПоАдресу(НомерСтроки, КолонкаИНН);
		Если ЗначениеЗаполнено(ИНН) Тогда
			ТекстСообщения = Неопределено;
			Если РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН,
				СтрДлина(ИНН) <> 12,
				ТекстСообщения) Тогда
				Таблица.Область(НомерСтроки, КолонкаИНН).Примечание.Текст = "";
			Иначе
				Таблица.Область(НомерСтроки, КолонкаИНН).Примечание.Текст = ТекстСообщения;
				ЕстьОшибкиИНН = Истина;
			КонецЕсли;
		Иначе
			Таблица.Область(НомерСтроки, КолонкаИНН).Примечание.Текст = "";
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьОшибкиНаименований И ЕстьОшибкиИНН Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Обнаружены ошибки в ИНН и незаполненные наименования.'"));
		Возврат;
	ИначеЕсли ЕстьОшибкиНаименований Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Обнаружены незаполненные сокращенные наименования.'"));
		Возврат;
	ИначеЕсли ЕстьОшибкиИНН Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Обнаружены ошибки в ИНН.'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьКонтрагентовПродолжение", ЭтаФорма);
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить(КодВозвратаДиалога.ОК, НСтр("ru = 'Создать'"));
	Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Вернуться и проверить'"));
	
	ПоказатьВопрос(ОписаниеОповещения, СтрШаблон(
		НСтр("ru = 'По данным этой таблицы будут созданы новые контрагенты (%1). Создать?'"),
		КоличествоКонтрагентов),
		Кнопки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаПриАктивизацииОбласти(Элемент)
	
	// Защитим от редактирования строку заголовков.
	Если Таблица.ТекущаяОбласть.Верх = 1
		Или Таблица.ТекущаяОбласть.Верх = 0 Тогда
		Элементы.Таблица.Редактирование = Ложь;
	Иначе
		Элементы.Таблица.Редактирование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	// Проверим ИНН при изменении и, если возможно, заполним данные по ИНН.
	
	КолонкаИНН = НомерКолонки("ИНН");
	
	Если КолонкаИНН >= Область.Лево
		И КолонкаИНН <= Область.Право Тогда
		
		Для НомерСтроки = Область.Верх По Область.Низ Цикл
			ИНН = ТекстПоАдресу(НомерСтроки, КолонкаИНН);
			Если ЗначениеЗаполнено(ИНН) Тогда
				ТекстСообщения = Неопределено;
				Если РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН,
					СтрДлина(ИНН) <> 12,
					ТекстСообщения) Тогда
					Таблица.Область(НомерСтроки, КолонкаИНН).Примечание.Текст = "";
					Если ВозможноЗаполнениеПоИНН Тогда
						ЗаполнитьПоИНН(ИНН, НомерСтроки);
					КонецЕсли;
				Иначе
					Таблица.Область(НомерСтроки, КолонкаИНН).Примечание.Текст = ТекстСообщения;
				КонецЕсли;
			Иначе
				Таблица.Область(НомерСтроки, КолонкаИНН).Примечание.Текст = "";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Создает контрагентов после ответа пользователя на вопрос.
//
&НаКлиенте
Процедура СоздатьКонтрагентовПродолжение(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Создано = 0; Пропущено = 0;
	СоздатьКонтрагентовСервер(Создано, Пропущено);
	
	Если Пропущено <> 0 Тогда
		ПоказатьПредупреждение(, СтрШаблон(
			НСтр("ru = 'Создано контрагентов: %1, найдено и пропущено: %2.'"),
			Создано,
			Пропущено));
	Иначе
		ПоказатьПредупреждение(, СтрШаблон(
			НСтр("ru = 'Создано контрагентов: %1.'"),
			Создано));
	КонецЕсли;
		
КонецПроцедуры

// Создает контрагентов.
//
&НаСервере
Процедура СоздатьКонтрагентовСервер(Создано, Пропущено)
	
	Для НомерСтроки = 2 По Таблица.ВысотаТаблицы Цикл
		
		Строка = ЯчейкиСтрокиСтруктурой(НомерСтроки);
		
		Ссылка = НайтиКонтрагента(Строка.ИНН, Строка.КПП, Строка.Наименование);
		Если ЗначениеЗаполнено(Ссылка) Тогда
			Пропущено = Пропущено + 1;
			Продолжить;
		КонецЕсли;
		
		Контрагент = Справочники.Контрагенты.СоздатьЭлемент();
		
		ЗаполнитьЗначенияСвойств(Контрагент, Строка);
		
		// Определим вид контрагента по ИНН и наименованию.
		Если СтрДлина(Строка.ИНН) = 12 Тогда
			Если СтрНачинаетсяС(Строка.Наименование, "ИП ")
				Или СтрЗаканчиваетсяНа(Строка.Наименование, " ИП")
				Или СтрНачинаетсяС(Строка.НаименованиеПолное, "ИП ")
				Или СтрЗаканчиваетсяНа(Строка.НаименованиеПолное, " ИП")
				Или СтрНачинаетсяС(ВРег(Строка.Наименование), "ИНДИВИДУАЛЬНЫЙ ПРЕДПРИНИМАТЕЛЬ ")
				Или СтрНачинаетсяС(ВРег(Строка.НаименованиеПолное), "ИНДИВИДУАЛЬНЫЙ ПРЕДПРИНИМАТЕЛЬ ") Тогда
				Контрагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель;
			ИначеЕсли ЗначениеЗаполнено(Строка.РегистрационныйНомер)
				Или ЗначениеЗаполнено(Строка.СвидетельствоОРегистрации) Тогда
				Контрагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель;
			Иначе
				Контрагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
			КонецЕсли;
		Иначе
			Контрагент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		КонецЕсли;
		
		// Заполним ФИО.
		Если Контрагент.ЮридическоеФизическоеЛицо = 
			Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			
			Контрагент.ФИО = Контрагент.Наименование;
			
		ИначеЕсли Контрагент.ЮридическоеФизическоеЛицо = 
			Перечисления.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель Тогда
			
			Если СтрНачинаетсяС(Контрагент.Наименование, "ИП ") Тогда
				Контрагент.ФИО = Сред(Контрагент.Наименование, 4);
				
			ИначеЕсли СтрЗаканчиваетсяНа(Контрагент.Наименование, " ИП") Тогда
				Контрагент.ФИО = Лев(Контрагент.Наименование, СтрДлина(Контрагент.Наименование) - 3);
				
			Иначе
				Контрагент.ФИО = Контрагент.Наименование;
			КонецЕсли;
			
		КонецЕсли;
		
		ВсеРеквизитыСтрокой = "";
		
		// ИНН / КПП.
		Если ЗначениеЗаполнено(Строка.КПП) Тогда
			ВсеРеквизитыСтрокой = СтрШаблон(НСтр("ru = 'ИНН %1, КПП %2'"),
				Строка.ИНН,
				Строка.КПП);
		ИначеЕсли ЗначениеЗаполнено(Строка.ИНН) Тогда
			ВсеРеквизитыСтрокой = СтрШаблон(НСтр("ru = 'ИНН %1'"), Строка.ИНН);
		КонецЕсли;
		
		// Паспортные данные.
		Если ЗначениеЗаполнено(Строка.ПаспортныеДанные) Тогда
			Если ЗначениеЗаполнено(ВсеРеквизитыСтрокой) Тогда
				ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
			КонецЕсли;
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Строка.ПаспортныеДанные;
		КонецЕсли;
		
		// ОГРН.
		Если ЗначениеЗаполнено(Строка.РегистрационныйНомер) Тогда
			Если ЗначениеЗаполнено(ВсеРеквизитыСтрокой) Тогда
				ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
			КонецЕсли;
			Если Контрагент.ЮридическоеФизическоеЛицо = 
				Перечисления.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель Тогда
				ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + СтрШаблон(
					НСтр("ru = 'ОГРНИП %1'"),
					Строка.РегистрационныйНомер);
			Иначе
				ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + СтрШаблон(
					НСтр("ru = 'ОГРН %1'"),
					Строка.РегистрационныйНомер);
			КонецЕсли;
		КонецЕсли;
		
		// Свидетельство.
		Если ЗначениеЗаполнено(Строка.СвидетельствоОРегистрации) Тогда
			Если ЗначениеЗаполнено(ВсеРеквизитыСтрокой) Тогда
				ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
			КонецЕсли;
			Если СтрНайти(ВРег(Строка.СвидетельствоОРегистрации), ВРег(НСтр("ru = 'свидетельство'"))) = 0
				И СтрНайти(ВРег(Строка.СвидетельствоОРегистрации), ВРег(НСтр("ru = 'свидетельства'"))) = 0 Тогда
				ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + СтрШаблон(НСтр("ru = 'Свидетельство %1'"), Строка.СвидетельствоОРегистрации);
				Контрагент.ДействуетНаОсновании = СтрШаблон(НСтр("ru = 'свидетельства %1'"), Строка.СвидетельствоОРегистрации)
			Иначе
				ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Строка.СвидетельствоОРегистрации;
				Контрагент.ДействуетНаОсновании = Строка.СвидетельствоОРегистрации;
			КонецЕсли;
		КонецЕсли;
		
		// Адрес.
		Если ЗначениеЗаполнено(Строка.Адрес) Тогда
			Если ЗначениеЗаполнено(ВсеРеквизитыСтрокой) Тогда
				ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
			КонецЕсли;
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Строка.Адрес;
		КонецЕсли;
		
		// Платежные реквизиты.
		Если ЗначениеЗаполнено(Строка.ПлатежныеРеквизиты) Тогда
			Если ЗначениеЗаполнено(ВсеРеквизитыСтрокой) Тогда
				ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
			КонецЕсли;
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Строка.ПлатежныеРеквизиты;
		КонецЕсли;
		Контрагент.ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой;
		
		// Преамбула и подписи.
		Если ЗначениеЗаполнено(Строка.ДолжностьРуководителя) Тогда
			Контрагент.ДолжностьПодписывающего = Строка.ДолжностьРуководителя;
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.ФИОРуководителя) Тогда
			Контрагент.РасшифровкаПодписи = РаботаСКонтрагентамиВызовСервера.ПолучитьРасшифровкуПодписи(
				Строка.ФИОРуководителя);
			Если Прав(ВРег(СокрЛП(Строка.ФИОРуководителя)), 3) = "ВНА" Тогда
				Пол = 2; // женский
			Иначе
				Пол = 1; // мужской
			КонецЕсли;
			Если ЗначениеЗаполнено(Строка.ДолжностьРуководителя) Тогда
				Контрагент.ВЛице = СтрШаблон("%1 %2",
					СклонениеПредставленийОбъектовВызовСервера.ПросклонятьПредставление(Строка.ДолжностьРуководителя, 2),
					СклонениеПредставленийОбъектовВызовСервера.ПросклонятьФИО(Строка.ФИОРуководителя, 2, , Пол));
			Иначе
				Контрагент.ВЛице = 
					СклонениеПредставленийОбъектовВызовСервера.ПросклонятьФИО(Строка.ФИОРуководителя, 2, , Пол);
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(Контрагент.ФИО) Тогда
			Контрагент.РасшифровкаПодписи = РаботаСКонтрагентамиВызовСервера.ПолучитьРасшифровкуПодписи(
				Контрагент.ФИО);
		КонецЕсли;
		
		Контрагент.ОбменДанными.Загрузка = Истина;
		Контрагент.Записать();
		
		Создано = Создано + 1;
		
	КонецЦикла;
	
КонецПроцедуры

// Ищет контрагента по реквизитам.
//
&НаСервере
Функция НайтиКонтрагента(ИНН, КПП, Наименование) 
	
	// Поиск по ИНН и КПП.
	Если ЗначениеЗаполнено(ИНН)
		И ЗначениеЗаполнено(КПП) Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Ссылка
			|ИЗ
			|	Справочник.Контрагенты
			|ГДЕ
			|	ИНН = &ИНН
			|	И КПП = &КПП
			|");
		Запрос.УстановитьПараметр("ИНН", ИНН);
		Запрос.УстановитьПараметр("КПП", КПП);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	// Поиск физлица по ИНН.
	Если ЗначениеЗаполнено(ИНН)
		И СтрДлина(ИНН) = 12 Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Ссылка
			|ИЗ
			|	Справочник.Контрагенты
			|ГДЕ
			|	ИНН = &ИНН
			|");
		Запрос.УстановитьПараметр("ИНН", ИНН);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	// Поиск по ИНН и наименованию без учета КПП.
	Если ЗначениеЗаполнено(ИНН)
		И ЗначениеЗаполнено(Наименование) Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Ссылка
			|ИЗ
			|	Справочник.Контрагенты
			|ГДЕ
			|	ИНН = &ИНН
			|	И Наименование = &Наименование
			|");
		Запрос.УстановитьПараметр("ИНН", ИНН);
		Запрос.УстановитьПараметр("Наименование", Наименование);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет реквизиты по ИНН.
//
&НаСервере
Процедура ЗаполнитьПоИНН(СтрокаИНН, НомерСтроки)
	
	ЭтоЮридическоеЛицо = СтрДлина(СтрокаИНН) <> 12;
	
	Если ЭтоЮридическоеЛицо Тогда
		РеквизитыКонтрагента = ДанныеЕдиныхГосРеестров.РеквизитыЮридическогоЛицаПоИНН(СтрокаИНН);
	Иначе
		РеквизитыКонтрагента = ДанныеЕдиныхГосРеестров.РеквизитыПредпринимателяПоИНН(СтрокаИНН);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
		ОписаниеОшибки = РеквизитыКонтрагента.ОписаниеОшибки;
		ЗаписьЖурналаРегистрации("Ошибка при заполнении по ИНН",
			УровеньЖурналаРегистрации.Ошибка,,,
			ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	Если ЭтоЮридическоеЛицо Тогда
		
		ЗаполнитьЯчейкуПоИмени(НомерСтроки, "КПП", РеквизитыКонтрагента.КПП);
		ЗаполнитьЯчейкуПоИмени(НомерСтроки, "Наименование", РеквизитыКонтрагента.НаименованиеСокращенное);
		ЗаполнитьЯчейкуПоИмени(НомерСтроки, "НаименованиеПолное", РеквизитыКонтрагента.НаименованиеПолное);
			
		Если РеквизитыКонтрагента.Свойство("ЮридическийАдрес")
			И ТипЗнч(РеквизитыКонтрагента.ЮридическийАдрес) = Тип("Структура") Тогда
			ЗаполнитьЯчейкуПоИмени(НомерСтроки, "Адрес", РеквизитыКонтрагента.ЮридическийАдрес.Представление);
		КонецЕсли;
		
	Иначе // ИП
		
		ЗаполнитьЯчейкуПоИмени(НомерСтроки, "КПП", "");
		
		ЗаполнитьЯчейкуПоИмени(НомерСтроки, "Наименование", РеквизитыКонтрагента.НаименованиеСокращенное);
		ЗаполнитьЯчейкуПоИмени(НомерСтроки, "НаименованиеПолное", РеквизитыКонтрагента.НаименованиеПолное);
		
		Если РеквизитыКонтрагента.Свойство("СвидетельствоОРегистрации")
			И ТипЗнч(РеквизитыКонтрагента.СвидетельствоОРегистрации) = Тип("Структура") Тогда
			ЗаполнитьЯчейкуПоИмени(НомерСтроки, "СвидетельствоОРегистрации", 
				СтрШаблон(НСтр("ru = 'Свидетельство %1 %2 от %3'"),
					РеквизитыКонтрагента.СвидетельствоОРегистрации.Серия,
					РеквизитыКонтрагента.СвидетельствоОРегистрации.Номер,
					Формат(РеквизитыКонтрагента.СвидетельствоОРегистрации.Дата, "ДФ=dd.MM.yy"))
			);
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитыКонтрагента.Свойство("Руководитель")
		И ЗначениеЗаполнено(РеквизитыКонтрагента.Руководитель) Тогда
		
		Если РеквизитыКонтрагента.Руководитель.Свойство("Должность")
			И ЗначениеЗаполнено(РеквизитыКонтрагента.Руководитель.Должность) Тогда
			ЗаполнитьЯчейкуПоИмени(НомерСтроки,
				"ДолжностьРуководителя",
				РеквизитыКонтрагента.Руководитель.Должность);
		КонецЕсли;
		
		Если РеквизитыКонтрагента.Руководитель.Свойство("Представление")
			И ЗначениеЗаполнено(РеквизитыКонтрагента.Руководитель.Представление) Тогда
			ЗаполнитьЯчейкуПоИмени(НомерСтроки,
				"ФИОРуководителя",
				РеквизитыКонтрагента.Руководитель.Представление);
		КонецЕсли;
		
	КонецЕсли;
		
	Если РеквизитыКонтрагента.Свойство("РегистрационныйНомер")
		И ЗначениеЗаполнено(РеквизитыКонтрагента.РегистрационныйНомер) Тогда
		ЗаполнитьЯчейкуПоИмени(НомерСтроки, "РегистрационныйНомер", РеквизитыКонтрагента.РегистрационныйНомер);
	КонецЕсли;
	
КонецПроцедуры

// Собирает значения ячеек строки в структуру, ключи которой - имена из параметров расшифровки.
//
Функция ЯчейкиСтрокиСтруктурой(НомерСтроки)
	
	Результат = Новый Структура;
	
	Для НомерКолонки = 1 По Таблица.ШиринаТаблицы Цикл
		Ключ = Таблица.Область(1, НомерКолонки).ПараметрРасшифровки;
		Если ЗначениеЗаполнено(Ключ) Тогда
			ТекстЯчейки = СокрЛП(Таблица.Область(НомерСтроки, НомерКолонки).Текст);
			Результат.Вставить(Ключ, ТекстЯчейки);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Получает номер колонки по ее имени в параметре расшифровки.
//
Функция НомерКолонки(ИмяКолонки)
	
	Для НомерКолонки = 1 По Таблица.ШиринаТаблицы Цикл
		Область = Таблица.Область(1, НомерКолонки);
		Если ВРег(Область.ПараметрРасшифровки) = ВРег(ИмяКолонки) Тогда
			Возврат НомерКолонки;
		КонецЕсли;
	КонецЦикла;
	
	ВызватьИсключение СтрШаблон(НСтр("ru = 'Нет колонки с именем %1'"), ИмяКолонки);
	
КонецФункции

// Полкчает текст ячейки с указанным адресом.
//
Функция ТекстПоАдресу(НомерСтроки, НомерКолонки)
	
	Возврат СокрЛП(Таблица.Область(НомерСтроки, НомерКолонки).Текст);
	
КонецФункции

// Заполняет ячейку текстом по номеру строки и имени колонки, находя ее по параметру расшифровки.
Процедура ЗаполнитьЯчейкуПоИмени(НомерСтроки, ИмяКолонки, Текст)
	
	Область = Таблица.Область(НомерСтроки, НомерКолонки(ИмяКолонки));
	Область.Текст = Текст;
	Область.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Обрезать;
	
КонецПроцедуры

#КонецОбласти