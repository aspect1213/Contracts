
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Параметры.Свойство("ЗагруженИзПочты") Тогда 
		ЗагруженИзПочты = Параметры.ЗагруженИзПочты;
	КонецЕсли;	
	
	Если Параметры.Свойство("Идентификатор") Тогда 
		Идентификатор = Параметры.Идентификатор;
	КонецЕсли;	
	
	Если Параметры.Свойство("АдресОтправителя") Тогда 
		АдресОтправителя = Параметры.АдресОтправителя;
	КонецЕсли;	
	
	// Вложения из письма
	Если Параметры.Свойство("Вложения") И Параметры.Вложения.Количество() > 0 Тогда 
		
		ЕстьВложения = Истина;
		Для Каждого Вложение Из Параметры.Вложения Цикл
			НоваяСтрока = ФайлыДобавленные.Добавить();
			НоваяСтрока.Наименование = Вложение.Имя;
			
			ДанныеФайла = ПолучитьИзВременногоХранилища(Вложение.Адрес);
			НоваяСтрока.ПолныйПуть = ПоместитьВоВременноеХранилище(ДанныеФайла, УникальныйИдентификатор);
			
			НоваяСтрока.ИндексКартинки = Вложение.ИндексКартинки;
			НоваяСтрока.Расширение = Вложение.Расширение;
			НоваяСтрока.Размер = Вложение.Размер;
			НоваяСтрока.ШаблонОснованиеДляСоздания = Неопределено;
			НоваяСтрока.ДобавленИзШаблона = Ложь;
			НоваяСтрока.СодержитДвоичныеДанные = Истина;
			НоваяСтрока.Идентификатор = Вложение.Идентификатор;
		КонецЦикла;
		
		КоличествоФайловТаблицы = ФайлыДобавленные.Количество();
		КоличествоФайлов = КоличествоФайловТаблицы;
		
	КонецЕсли;
	
	// Контрагент передан извне
	Если Параметры.Свойство("Контрагент") И ЗначениеЗаполнено(Параметры.Контрагент) Тогда 
		Объект.Контрагент = Параметры.Контрагент;
		Контрагент = Строка(Объект.Контрагент);
		ВидКонтрагента = Объект.Контрагент.ЮридическоеФизическоеЛицо;
		Элементы.ВидКонтрагента.ТолькоПросмотр = Истина;
		Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
			АдресОтправителя = "";
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Родители, "Контрагент", Объект.Контрагент);
	КонецЕсли;
	
	// Вид документа установлен извне
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		УстановитьВидДокумента();
		ЕстьЗаполнениеРодителя = Не ЭтоДоговор И Не ЗначениеЗаполнено(Объект.Родитель);
		Если ЕстьЗаполнениеРодителя Тогда 
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРодители;
			Элементы.ФормаНазад.Доступность = Истина;
		Иначе
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРеквизиты;
			Элементы.ФормаНазад.Доступность = Истина;
		КонецЕсли;	
	КонецЕсли;
	
	// Родитель передан извне
	Если Параметры.Свойство("Родитель") И ЗначениеЗаполнено(Параметры.Родитель) Тогда 
		Объект.Родитель = Параметры.Родитель;
		РодительИзвне = Истина;
		УстановитьРодителя();
		
		РеквизитыРодителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Родитель,
			"Контрагент, ВидДокумента.Тип");
		
		ТипыДляОтбора = Новый Массив;
		ВидДокументаТип = РеквизитыРодителя.ВидДокументаТип;
		Если ВидДокументаТип = Перечисления.ТипыДоговорныхДокументов.Договор Тогда 
			
			ТипыДляОтбора.Добавить(Перечисления.ТипыДоговорныхДокументов.ДопСоглашение);
			ТипыДляОтбора.Добавить(Перечисления.ТипыДоговорныхДокументов.Акт);
			ТипыДляОтбора.Добавить(Перечисления.ТипыДоговорныхДокументов.Накладная);
			ТипыДляОтбора.Добавить(Перечисления.ТипыДоговорныхДокументов.Счет);
			
		ИначеЕсли ВидДокументаТип = Перечисления.ТипыДоговорныхДокументов.ДопСоглашение Тогда 
			
			ТипыДляОтбора.Добавить(Перечисления.ТипыДоговорныхДокументов.Акт);
			ТипыДляОтбора.Добавить(Перечисления.ТипыДоговорныхДокументов.Накладная);
			ТипыДляОтбора.Добавить(Перечисления.ТипыДоговорныхДокументов.Счет);
			
		ИначеЕсли ВидДокументаТип = Перечисления.ТипыДоговорныхДокументов.Акт 
			Или ВидДокументаТип = Перечисления.ТипыДоговорныхДокументов.Накладная Тогда
			
			ТипыДляОтбора.Добавить(Перечисления.ТипыДоговорныхДокументов.Счет);
			
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ВидыДокументов, "Тип", ТипыДляОтбора,
			ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	
	УчитыватьНДС = ДоговорныеДокументы.УчитыватьНДС();
	Если Не УчитыватьНДС Тогда 
		Элементы.ГруппаСуммаНДС.Видимость = Ложь;
		Элементы.ТоварыСтавкаНДС.Видимость = Ложь;
		Элементы.ТоварыСуммаНДС.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	#Если ВебКлиент Тогда
		ЭтоВебКлиент = Истина;
	#Иначе
		ЭтоВебКлиент = Ложь;
	#КонецЕсли
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		ОткрытьЗакладкуРодители();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	МассивЗахваченныхФайлов = Новый Массив;
	ДоговорныеДокументыКлиент.ДобавитьЗанятыеФайлыСамойКарточки(ЭтаФорма, МассивЗахваченныхФайлов);
	ДоговорныеДокументыКлиент.ПоместитьИзмененияФайлов(Объект.Ссылка, УникальныйИдентификатор, 
		МассивЗахваченныхФайлов);
	
	Если Объект.Ссылка.Пустая() Тогда 
		СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(Объект);
		Нумерация.ОсвободитьНомер(СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ИмяСобытия = "Запись_ВидДокумента" 
		И ТипЗнч(Параметр) = Тип("Структура") Тогда 
		Если Параметр.Свойство("ВыбратьВКонструктореСозданияДокумента") 
			И Параметр.ВыбратьВКонструктореСозданияДокумента Тогда 
			Элементы.ВидыДокументов.ТекущаяСтрока = Параметр.Ссылка;
			Далее(Неопределено);
		КонецЕсли;
	КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ДоговорныеДокументыКлиент.УдалитьПустыеСтрокиТаблицы(Объект.Товары, "НоменклатураСтрока");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Для Каждого Строка Из ТекущийОбъект.Товары Цикл 
		Если Не ЗначениеЗаполнено(Строка.Номенклатура) Тогда 
			СтрокаОбъекта = Объект.Товары.Получить(Строка.НомерСтроки - 1);
			Строка.Номенклатура = ДоговорныеДокументы.СоздатьНоменклатуру(
				СтрокаОбъекта.НоменклатураСтрока, 
				СтрокаОбъекта.ЕдиницаИзмерения,
				СтрокаОбъекта.Цена, 
				СтрокаОбъекта.СтавкаНДС);
		КонецЕсли;
		
		Строка.Номер = Строка.НомерСтроки;
	КонецЦикла;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Не ЗначениеЗаполнено(ТекущийОбъект.Контрагент) Тогда 
		
		Если ЗначениеЗаполнено(Контрагент) Тогда 
			// Создание контрагента
			УстановитьПривилегированныйРежим(Истина);
			НовыйКонтрагент = Справочники.Контрагенты.СоздатьЭлемент();
			НовыйКонтрагент.ЮридическоеФизическоеЛицо = ВидКонтрагента;
			
			Если ЗначениеЗаполнено(ИНН) Тогда 
				НовыйКонтрагент.ИНН = ИНН;
			КонецЕсли;
			Если ЗначениеЗаполнено(КПП) Тогда 
				НовыйКонтрагент.КПП = КПП;
			КонецЕсли;
			
			Если ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо
			 Или ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель Тогда 
				НовыйКонтрагент.ФИО = Контрагент;
			Иначе
				НовыйКонтрагент.Наименование = Контрагент;
			КонецЕсли;
			
			Если ЕстьАвтозаполнение Тогда 
				НовыйКонтрагент.НаименованиеПолное = НаименованиеПолное;
				НовыйКонтрагент.ВЛице = ВЛице;
				НовыйКонтрагент.ДействуетНаОсновании = ДействуетНаОсновании;
				НовыйКонтрагент.ПаспортныеДанные = ПаспортныеДанные;
				НовыйКонтрагент.ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой;
				НовыйКонтрагент.ДолжностьПодписывающего = ДолжностьПодписывающего;
				НовыйКонтрагент.РасшифровкаПодписи = РасшифровкаПодписи;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(АдресОтправителя) 
				И Не ЗначениеЗаполнено(НовыйКонтрагент.АдресЭлектроннойПочты) Тогда 
				НовыйКонтрагент.АдресЭлектроннойПочты = АдресОтправителя;
			КонецЕсли;	
			
			НовыйКонтрагент.Записать();
		
			ТекущийОбъект.Контрагент = НовыйКонтрагент.Ссылка;
		Иначе	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено поле """"Контрагент""""'"),,
				"Контрагент",, Отказ);
		КонецЕсли;	
		
	Иначе	
		
		// Обновление контрагента
		УстановитьПривилегированныйРежим(Истина);
		НовыйКонтрагент = Объект.Контрагент.ПолучитьОбъект();
		НужноЗаписать = Ложь;
		
		Если ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо
		 Или ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель Тогда 
			Если НовыйКонтрагент.ФИО <> Контрагент Тогда 
				НовыйКонтрагент.ФИО = Контрагент;
				НужноЗаписать = Истина;
			КонецЕсли;
		Иначе
			Если НовыйКонтрагент.Наименование <> Контрагент Тогда 
				НовыйКонтрагент.Наименование = Контрагент;
				НужноЗаписать = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(АдресОтправителя) 
			И НовыйКонтрагент.АдресЭлектроннойПочты <> АдресОтправителя Тогда 
			НовыйКонтрагент.АдресЭлектроннойПочты = АдресОтправителя;
			НужноЗаписать = Истина;
		КонецЕсли;	
		
		Если ЕстьАвтозаполнение Тогда 
			
			Если Элементы.ИНН.Видимость Тогда 
				Если НовыйКонтрагент.ИНН <> ИНН Тогда 
					НовыйКонтрагент.ИНН = ИНН;
					НужноЗаписать = Истина;
				КонецЕсли;
				Если НовыйКонтрагент.КПП <> КПП Тогда 
					НовыйКонтрагент.КПП = КПП;
					НужноЗаписать = Истина;
				КонецЕсли;
			КонецЕсли;
			
			Если НовыйКонтрагент.НаименованиеПолное <> НаименованиеПолное 
				И Элементы.НаименованиеПолное.Видимость Тогда 
				НовыйКонтрагент.НаименованиеПолное = НаименованиеПолное;
				НужноЗаписать = Истина;
			КонецЕсли;
			
			Если НовыйКонтрагент.ВЛице <> ВЛице 
				И Элементы.ВЛице.Видимость Тогда 
				НовыйКонтрагент.ВЛице = ВЛице;
				НужноЗаписать = Истина;
			КонецЕсли;
			
			Если НовыйКонтрагент.ДействуетНаОсновании <> ДействуетНаОсновании
				И Элементы.ДействуетНаОсновании.Видимость Тогда 
				НовыйКонтрагент.ДействуетНаОсновании = ДействуетНаОсновании;
				НужноЗаписать = Истина;
			КонецЕсли;
			
			Если НовыйКонтрагент.ПаспортныеДанные <> ПаспортныеДанные
				И Элементы.ПаспортныеДанные.Видимость Тогда 
				НовыйКонтрагент.ПаспортныеДанные = ПаспортныеДанные;
				НужноЗаписать = Истина;
			КонецЕсли;
			
			Если НовыйКонтрагент.ВсеРеквизитыСтрокой <> ВсеРеквизитыСтрокой
				И Элементы.ВсеРеквизитыСтрокой.Видимость Тогда 
				НовыйКонтрагент.ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой;
				НужноЗаписать = Истина;
			КонецЕсли;
			
			Если НовыйКонтрагент.ДолжностьПодписывающего <> ДолжностьПодписывающего
				И Элементы.ДолжностьПодписывающего.Видимость Тогда 
				НовыйКонтрагент.ДолжностьПодписывающего = ДолжностьПодписывающего;
				НужноЗаписать = Истина;
			КонецЕсли;
			
			Если НовыйКонтрагент.РасшифровкаПодписи <> РасшифровкаПодписи
				И Элементы.РасшифровкаПодписи.Видимость Тогда 
				НовыйКонтрагент.РасшифровкаПодписи = РасшифровкаПодписи;
				НужноЗаписать = Истина;
			КонецЕсли;
		КонецЕсли;
		Если НужноЗаписать Тогда 
			НовыйКонтрагент.Записать();
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ИдентификаторыФайлов.Очистить();
	
	// Создание файлов при сохранении нового документа
	Если ФайлыДобавленные.Количество() > 0 Тогда
		
		ДанныеДляЗаполненияФайловНаКлиенте.Очистить(); 
		ЗаполненныеФайлы.Очистить();
		
		Индекс = ФайлыДобавленные.Количество() - 1;
		Пока Индекс >= 0 Цикл
			ФайлТаблицы = ФайлыДобавленные[Индекс]; 
			Если Не ЭтоАдресВременногоХранилища(ФайлТаблицы.ПолныйПуть) Тогда
				Индекс = Индекс - 1;
				Продолжить;
			КонецЕсли;
			
			ДанныеФайла = ПолучитьИзВременногоХранилища(ФайлТаблицы.ПолныйПуть);
			ВладелецФайла = Объект.Ссылка;
			
			Приемник = Неопределено; // ссылка на созданный файл
			
			СведенияОФайле = РаботаСФайламиКлиентСервер.СведенияОФайле("ФайлСВерсией");
			
			Если ТипЗнч(ДанныеФайла) = Тип("ДвоичныеДанные") Тогда
				
				СведенияОФайле.ИмяБезРасширения = ФайлТаблицы.Наименование;
				СведенияОФайле.АдресВременногоХранилищаФайла = ФайлТаблицы.ПолныйПуть;
				
				СведенияОФайле.РасширениеБезТочки = ФайлТаблицы.Расширение;
				СведенияОФайле.ВремяИзменения = ТекущаяДата();
				СведенияОФайле.ВремяИзмененияУниверсальное = ТекущаяДата();
				СведенияОФайле.Автор = ПользователиКлиентСервер.ТекущийПользователь();
				СведенияОФайле.Размер = ФайлТаблицы.Расширение;
				
				ИзвлекатьТекстыФайловНаСервере = ФайловыеФункции.ИзвлекатьТекстыФайловНаСервере();
				Если Не ИзвлекатьТекстыФайловНаСервере Тогда
					
					ИмяВременногоФайла = ПолучитьИмяВременногоФайла(ФайлТаблицы.Расширение);
					ДанныеФайла.Записать(ИмяВременногоФайла);
					
					Текст = ФайловыеФункцииСлужебныйКлиентСервер.ИзвлечьТекст(
						ИмяВременногоФайла, 
						Ложь); // Отказ
						
					СведенияОФайле.АдресВременногоХранилищаТекста = Новый ХранилищеЗначения(Текст);	
						
					УдалитьФайлы(ИмяВременногоФайла);	
						
				Иначе
					СведенияОФайле.АдресВременногоХранилищаТекста = "";
				КонецЕсли;
				
				Приемник = РаботаСФайламиВызовСервера.СоздатьФайлСВерсией(ВладелецФайла, СведенияОФайле);
				
			ИначеЕсли ТипЗнч(ДанныеФайла) = Тип("Структура") Тогда
				
				ХранитьВерсииНовыйФайл = Истина;
				
				Источник = ДанныеФайла.Ссылка;
				ХранитьВерсииНовыйФайл = Источник.ХранитьВерсии;
				
				Если ТипЗнч(Объект.Ссылка) <> ТипЗнч(ДанныеФайла.Владелец) Или ФайлТаблицы.ДобавленИзШаблона Тогда 
					ХранитьВерсииНовыйФайл = Истина;
				КонецЕсли;	
				
				СведенияОФайле.Комментарий = Источник.Описание;
				СведенияОФайле.ИмяБезРасширения = Источник.ПолноеНаименование;
				СведенияОФайле.ХранитьВерсии = ХранитьВерсииНовыйФайл;
				
				Приемник = РаботаСФайламиВызовСервера.СоздатьФайл(ВладелецФайла, СведенияОФайле);
				
				Если Не Источник.ТекущаяВерсия.Пустая() Тогда
					
					ХранилищеФайла = Неопределено;
					Если Источник.ТекущаяВерсия.ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе Тогда
						ХранилищеФайла = РаботаСФайламиВызовСервера.ПолучитьХранилищеФайлаИзИнформационнойБазы(Источник.ТекущаяВерсия);
					КонецЕсли;
					
					СведенияОФайле.Размер = Источник.ТекущаяВерсия.Размер;
					СведенияОФайле.РасширениеБезТочки = Источник.ТекущаяВерсия.Расширение;
					СведенияОФайле.АдресВременногоХранилищаФайла = ХранилищеФайла;
					СведенияОФайле.АдресВременногоХранилищаТекста = Источник.ТекущаяВерсия.ТекстХранилище;
					СведенияОФайле.СсылкаНаВерсиюИсточник = Источник.ТекущаяВерсия;
					СведенияОФайле.ВремяИзменения = Источник.ТекущаяВерсия.ДатаМодификацииФайла;
					СведенияОФайле.ВремяИзмененияУниверсальное = Источник.ТекущаяВерсия.ДатаМодификацииУниверсальная;

					Версия = РаботаСФайламиВызовСервера.СоздатьВерсию(Приемник, СведенияОФайле);
					
					РаботаСФайламиВызовСервера.ОбновитьВерсиюВФайле(Приемник, Версия, Источник.ТекущаяВерсия.ТекстХранилище);
					
					ПараметрыРаспознавания = РаботаСФайламиВызовСервера.ПодготовитьПараметрыРаспознавания();
					Если ПараметрыРаспознавания <> Неопределено И ПараметрыРаспознавания.Свойство("РаспознатьПослеДобавления") И ПараметрыРаспознавания.РаспознатьПослеДобавления Тогда
						РаспознатьНемедленно = Ложь;
						ОписаниеОшибки = "";
						РаспознанныйТекст = "";
						РаботаСФайламиВызовСервера.РаспознатьФайл(Приемник, ПараметрыРаспознавания, ОписаниеОшибки,
							РаспознанныйТекст, УникальныйИдентификатор,  РаспознатьНемедленно);
					КонецЕсли;
					
					Если ФайлТаблицы.ДобавленИзШаблона Тогда
						ФайлОбъект = Приемник.ПолучитьОбъект();
						ФайлОбъект.ШаблонОснованиеДляСоздания = ФайлТаблицы.ШаблонОснованиеДляСоздания;
						ФайлОбъект.Записать();	
					КонецЕсли;
					
					// Автозаполнение файлов
					Если Источник <> Неопределено И ФайлТаблицы.ДобавленИзШаблона Тогда
						НастройкиАвтозаполнения = ПолучитьНастройкиАвтозаполненийШаблона(Приемник, 
							Приемник.ШаблонОснованиеДляСоздания, Приемник.ВладелецФайла);
						
						Если Приемник.ТекущаяВерсияРасширение = "doc"
							И ПолучитьСкоростьКлиентскогоСоединения() = СкоростьКлиентскогоСоединения.Обычная
							И Не ЭтоВебКлиент Тогда
							НоваяСтрока = ДанныеДляЗаполненияФайловНаКлиенте.Добавить();
							НоваяСтрока.Файл = Приемник;
							НоваяСтрока.Автозаполнение = Истина;
							НоваяСтрока.НастройкиЗаполнения.Добавить(НастройкиАвтозаполнения);
						Иначе
							РезультатЗаполнения = АвтозаполнениеШаблоновФайловКлиентСервер.ЗаполнитьПоляФайлаДаннымиВладельца(
								Ложь, Приемник, Истина);
								
							Если РезультатЗаполнения <> Неопределено И РезультатЗаполнения.Результат = Истина Тогда 
								НоваяСтрока = ЗаполненныеФайлы.Добавить();
								НоваяСтрока.Файл = Приемник;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;	
			
			ФайлТаблицы.СсылкаСозданногоФайла = Приемник;
			
			Если ЗначениеЗаполнено(ФайлТаблицы.Идентификатор) Тогда
				Строка = ИдентификаторыФайлов.Добавить();
				Строка.Идентификатор = ФайлТаблицы.Идентификатор;
				Строка.Ссылка = ФайлТаблицы.СсылкаСозданногоФайла;
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(ФайлТаблицы.Идентификатор) Тогда
				
				// Регистрация внешнего источника для импортированного файла
				РегистрыСведений.ВнешниеИсточникиДокументов.ЗарегистрироватьВнешнийИсточникДокумента(
					Приемник,
					ФайлТаблицы.Идентификатор);
				
			КонецЕсли;	
			
			ФайлыДобавленные.Удалить(Индекс);
			Индекс = Индекс - 1;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого СтрокаТовары Из Объект.Товары Цикл 
		СтрокаТовары.НоменклатураСтрока = Строка(СтрокаТовары.Номенклатура);
	КонецЦикла;
	
	// проверка изменения номера
	СпособНумерации = ТекущийОбъект.ВидДокумента.СпособНумерации;
	Если СпособНумерации = Перечисления.СпособыНумерации.Автоматически 
		И СокрЛП(АвтоматическийНомер) <> СокрЛП(ТекущийОбъект.НомерДокумента)
		И ЗначениеЗаполнено(АвтоматическийНомер)
		И ЗначениеЗаполнено(ТекущийОбъект.НомерДокумента)
		И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(АвтоматическийНомер)
		И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ТекущийОбъект.НомерДокумента) Тогда 
		УстановитьПривилегированныйРежим(Истина);
		
		НовыйЧисловойНомер = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ТекущийОбъект.НомерДокумента);
	   
		МенеджерЗаписи = РегистрыСведений.Нумерация.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ПериодНумерации = НачалоГода(ТекущаяДата());
		Если ЗначениеЗаполнено(ТекущийОбъект.Родитель) Тогда 
			МенеджерЗаписи.СвязанныйДокумент = ТекущийОбъект.Родитель;
		КонецЕсли;	
		МенеджерЗаписи.ВидДокумента = ТекущийОбъект.ВидДокумента;
		МенеджерЗаписи.Прочитать();
		
		Если МенеджерЗаписи.ТекущийНомер < НовыйЧисловойНомер Тогда 
			МенеджерЗаписи.ТекущийНомер = НовыйЧисловойНомер;
			МенеджерЗаписи.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ФайлыДобавленные.Количество() > 0 Тогда
		Индекс = ФайлыДобавленные.Количество() - 1;
		Пока Индекс >= 0 Цикл 
			
			ФайлТаблицы = ФайлыДобавленные[Индекс];
			Если ЭтоАдресВременногоХранилища(ФайлТаблицы.ПолныйПуть) Тогда
				Индекс = Индекс - 1;
				Продолжить;
			КонецЕсли;
			
			РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(ФайлТаблицы.ПолныйПуть, Объект.Ссылка, ЭтаФорма, Истина);			
			
			ФайлыДобавленные.Удалить(Индекс);
			Индекс = Индекс - 1;
		
		КонецЦикла;
	КонецЕсли;
	
	#Если НЕ ВебКлиент Тогда
	//Выполнить автозаполнение файлов, которые должны заполняться на клиенте
	Если ДанныеДляЗаполненияФайловНаКлиенте.Количество() > 0 Тогда
		Состояние(НСтр("ru = 'Выполняется автоматическое заполнение файлов. Пожалуйста, подождите...'"));
		
		МассивДанныхДляОбновленияФайлов = Новый Массив;
		Для Каждого ФайлДляАвтоЗаполнения Из ДанныеДляЗаполненияФайловНаКлиенте Цикл
			
			ЗаполненныйФайл = Новый Структура("ДвоичныеДанные, ТекущаяВерсия");
			ДвоичныеДанныеЗаполненногоФайла = Неопределено;
			Если ФайлДляАвтоЗаполнения.Автозаполнение Тогда
				ДвоичныеДанныеЗаполненногоФайла = АвтозаполнениеШаблоновФайловКлиентСервер.ЗаполнитьФайлMSWordПоДвоичнымДанным(
					ФайлДляАвтоЗаполнения.НастройкиЗаполнения[0].Значение.РасширениеШаблона,
					ФайлДляАвтоЗаполнения.НастройкиЗаполнения[0].Значение.НастройкиЗамены,
					ФайлДляАвтоЗаполнения.НастройкиЗаполнения[0].Значение.ДвоичныеДанные);
			КонецЕсли;
			
			Если ДвоичныеДанныеЗаполненногоФайла <> Неопределено Тогда
				ЗаполненныйФайл.ДвоичныеДанные = ДвоичныеДанныеЗаполненногоФайла;
				ЗаполненныйФайл.ТекущаяВерсия = ФайлДляАвтоЗаполнения.НастройкиЗаполнения[0].Значение.ТекущаяВерсия;
				МассивДанныхДляОбновленияФайлов.Добавить(ЗаполненныйФайл);
				
				НоваяСтрокаФайла = ЗаполненныеФайлы.Добавить();
				НоваяСтрокаФайла.Файл = ФайлДляАвтоЗаполнения.Файл;
			КонецЕсли;
		КонецЦикла;
		Если МассивДанныхДляОбновленияФайлов.Количество() > 0 Тогда
			ВыполнитьПакетноеОбновлениеВерсийФайлов(МассивДанныхДляОбновленияФайлов);
		КонецЕсли;
		ДанныеДляЗаполненияФайловНаКлиенте.Очистить();
		Состояние();
	КонецЕсли;
	
	#КонецЕсли

	Если ЗагруженИзПочты Тогда
		СведенияФайловМассив = Новый Массив;
		Для Каждого Строка Из ИдентификаторыФайлов Цикл
			ОписаниеФайла = Новый Структура("Идентификатор, Ссылка", 
				Строка.Идентификатор, Строка.Ссылка);
			СведенияФайловМассив.Добавить(ОписаниеФайла);
		КонецЦикла;	
		
		ПараметрыОповещения = Новый Структура("Ссылка, Идентификатор, ИдентификаторыФайлов", 
			Объект.Ссылка, Идентификатор, СведенияФайловМассив);
		Оповестить("Договор_ЗаписьИзПочты", ПараметрыОповещения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Родитель) Тогда 
		ПараметрОповещения = Новый Структура;
		ПараметрОповещения.Вставить("Документ", Объект.Ссылка);
		ПараметрОповещения.Вставить("Родитель", Объект.Родитель);
		Оповестить("Запись_Подчиненного", ПараметрОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнено поле ""Контрагент""'"),, 
			"Контрагент",,
			Отказ);
	КонецЕсли;
	
	Если Элементы.ВидКонтрагента.Видимость Тогда 
		Если Не ЗначениеЗаполнено(ВидКонтрагента) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не заполнено поле ""Вид контрагента""'"),, 
				"ВидКонтрагента",,
				Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если Элементы.ИНН.Видимость И ЗначениеЗаполнено(ИНН) И ЗначениеЗаполнено(ВидКонтрагента) Тогда 
		ТекстСообщения = "";
		ЭтоЮридическоеЛицо = (ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
		Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(
				ИНН, ЭтоЮридическоеЛицо, ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,
				"ИНН",, Отказ);	
		КонецЕсли;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапки

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяСтрока", Объект.Контрагент);
	
	Если ЗначениеЗаполнено(ВидКонтрагента) 
		И Элементы.ВидКонтрагента.ТолькоПросмотр = Ложь Тогда 
		
		Отбор = Новый Структура("ЮридическоеФизическоеЛицо", ВидКонтрагента);
		ПараметрыФормы.Вставить("Отбор", Отбор);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресОтправителя) Тогда
		ПараметрыФормы.Вставить("АдресОтправителя", АдресОтправителя);
	КонецЕсли;	
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда 
		Объект.Контрагент = Неопределено;
		ВидКонтрагента = Неопределено;
		Элементы.ВидКонтрагента.ТолькоПросмотр = Ложь;
	Иначе	
		Если Элементы.РасшифровкаПодписи.Видимость Тогда 
			Если ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо")
			 Или ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель") Тогда
				РасшифровкаПодписи = ПолучитьРасшифровкуПодписи(Контрагент);
			КонецЕсли;
		КонецЕсли;
		Если Элементы.ВсеРеквизитыСтрокой.Видимость Тогда 
			Если Не ЗначениеЗаполнено(ВсеРеквизитыСтрокой) Тогда 
				ВсеРеквизитыСтрокой = Контрагент;
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентОчистка(Элемент, СтандартнаяОбработка)

	Объект.Контрагент = Неопределено;
	ВидКонтрагента = Неопределено;
	Элементы.ВидКонтрагента.ТолькоПросмотр = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Объект.Контрагент = ВыбранноеЗначение;
	Контрагент = Строка(Объект.Контрагент);
	ВидКонтрагента = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "ЮридическоеФизическоеЛицо");
	Элементы.ВидКонтрагента.ТолькоПросмотр = Истина;
	
	УстановитьРеквизитыДляАвтозаполнения();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		Если ЗначениеЗаполнено(ВидКонтрагента) 
			И Элементы.ВидКонтрагента.ТолькоПросмотр = Ложь Тогда 
			Отбор = Новый Структура("ЮридическоеФизическоеЛицо", ВидКонтрагента);
		Иначе	
			Отбор = Неопределено;
		КонецЕсли;
		
		СписокВыбора = ПолучитьДанныеВыбораКонтрагентов(Текст, Отбор);
		Если СписокВыбора.Количество() > 0 Тогда 
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора = СписокВыбора;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда 
		ПоказатьЗначение(,Объект.Контрагент);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПаспортныеДанныеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ПаспортныеДанные) Тогда 
		Если Не ЗначениеЗаполнено(ВсеРеквизитыСтрокой) Тогда
			ВсеРеквизитыСтрокой = ПаспортныеДанные;
		ИначеЕсли ВсеРеквизитыСтрокой = Контрагент Тогда 	
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС + ПаспортныеДанные;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидКонтрагентаПриИзменении(Элемент)
	
	УстановитьРеквизитыДляАвтозаполнения();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаДействияПриИзменении(Элемент)
	
	ПересчитатьСрокДействия(Объект.ДатаНачалаДействия, Объект.ДатаОкончанияДействия, СрокДействия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеДокументаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Состояние = "ВсеДокументы";
	
	УстановитьОтборСпискаРодителей();
	
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, Состояние, "ВсеДокументы");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеДокументаПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Состояние) Тогда 
		Состояние = "ВсеДокументы";
	КонецЕсли;	
	
	УстановитьОтборСпискаРодителей();
	
	ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, Состояние, "ВсеДокументы");
	
КонецПроцедуры

&НаКлиенте
Процедура ДействуетНаОснованииАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст)
		Или Ожидание = 0 Тогда
		СписокВыбора = ПолучитьДанныеВыбораДействуетНаОсновании(Текст);
		Если СписокВыбора.Количество() > 0 Тогда
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора = СписокВыбора;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьПодписывающегоАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст)
		Или Ожидание = 0 Тогда
		СписокВыбора = ПолучитьДанныеВыбораДолжностьПодписывающего(Текст);
		Если СписокВыбора.Количество() > 0 Тогда
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора = СписокВыбора;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ИНН) Тогда 
		Возврат;
	КонецЕсли;	
	
	ТекстСообщения = Неопределено;
	ЭтоЮридическоеЛицо = (ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, ЭтоЮридическоеЛицо, ТекстСообщения) Тогда
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	НайденныйЭлемент = НайтиКонтрагентаПоИНН(ИНН);
	Если ЗначениеЗаполнено(НайденныйЭлемент) И Объект.Контрагент <> НайденныйЭлемент Тогда 
		Объект.Контрагент = НайденныйЭлемент;
		Контрагент = Строка(Объект.Контрагент);
		ВидКонтрагента = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Контрагент, "ЮридическоеФизическоеЛицо");
		Элементы.ВидКонтрагента.ТолькоПросмотр = Истина;
		УстановитьРеквизитыДляАвтозаполнения();
		Элементы.ИНН.Видимость = Истина;
	КонецЕсли;
	
	Если (Элементы.ВсеРеквизитыСтрокой.Видимость И ЗначениеЗаполнено(ВсеРеквизитыСтрокой))
	 Или (Элементы.ВЛице.Видимость И ЗначениеЗаполнено(ВЛице))
	 Или (Элементы.РасшифровкаПодписи.Видимость И ЗначениеЗаполнено(РасшифровкаПодписи))
	 Или (Элементы.ДолжностьПодписывающего.Видимость И ЗначениеЗаполнено(ДолжностьПодписывающего)) Тогда 
	    Если ЗначениеЗаполнено(Контрагент) Тогда 
	 		ТекстВопроса = СтрШаблон(
				НСтр("ru = 'Перезаполнить текущие реквизиты контрагента ""%1"" данными из ЕГРЮЛ \ ЕГРИП ?'"),
				Контрагент);
		Иначе
			ТекстВопроса = НСтр("ru = 'Перезаполнить текущие реквизиты контрагента данными из ЕГРЮЛ \ ЕГРИП ?'");
		КонецЕсли;		
			
		ОписаниеОповещения = Новый ОписаниеОповещения("ИННПриИзмененииПродолжение", 
			ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРеквизитыПоИНННаКлиенте(ИНН);
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзмененииПродолжение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;	
	
	ЗаполнитьРеквизитыПоИНННаКлиенте(ИНН);
	
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВидыДокументов

&НаКлиенте
Процедура ВидыДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Далее(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДокументовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	Если Копирование Тогда 
		ПараметрыФормы.Вставить("ЗначениеКопирования", Элементы.ВидыДокументов.ТекущаяСтрока);
	КонецЕсли;
	ПараметрыФормы.Вставить("НеСоздаватьДокументПриЗакрытии", Истина);
	ПараметрыФормы.Вставить("ЗагруженИзПочты", ЗагруженИзПочты);
	
	ОткрытьФорму("Справочник.ВидыДокументов.ФормаОбъекта", ПараметрыФормы, Элементы.ВидыДокументов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРодители

&НаКлиенте
Процедура РодителиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Далее(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	ПринятыеЭлементы = Новый Массив;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") 
		И ПараметрыПеретаскивания.Значение.Количество() > 0 
		И ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		Для Каждого Строка Из ПараметрыПеретаскивания.Значение Цикл
			ПринятыеЭлементы.Добавить(Строка);
		КонецЦикла;	
		
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СправочникСсылка.Номенклатура") Тогда
		ПринятыеЭлементы.Добавить(ПараметрыПеретаскивания.Значение);
	КонецЕсли;
	
	Если ПринятыеЭлементы.Количество() > 0 Тогда
		Для Каждого ВыделеннаяСтрока Из ПринятыеЭлементы Цикл
			ТекущиеДанные = Элементы.ВсеТовары.ДанныеСтроки(ВыделеннаяСтрока);
			Если ТекущиеДанные.ЭтоГруппа Тогда 
				ПеренестиНоменклатуруИзГруппы(ТекущиеДанные.Ссылка);
			Иначе 
				НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура", ТекущиеДанные.Ссылка));
				Если НайденныеСтроки.Количество() = 0 Тогда 
					НайденнаяСтрока = Объект.Товары.Добавить();
					НайденнаяСтрока.Номенклатура = ТекущиеДанные.Ссылка;
					НайденнаяСтрока.НоменклатураСтрока = Строка(ТекущиеДанные.Ссылка);
					НайденнаяСтрока.ЕдиницаИзмерения = ТекущиеДанные.ЕдиницаИзмерения;
					НайденнаяСтрока.Цена = ТекущиеДанные.Цена;
					НайденнаяСтрока.СтавкаНДС = ТекущиеДанные.СтавкаНДС;
					НайденнаяСтрока.Количество = 1;
					ДоговорныеДокументыКлиентСервер.ПересчитатьСуммуВСтрокеТЧ(НайденнаяСтрока, НайденнаяСтрока.СтавкаНДС);
				Иначе 
					Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
						НайденнаяСтрока.Количество = НайденнаяСтрока.Количество + 1;
						ДоговорныеДокументыКлиентСервер.ПересчитатьСуммуВСтрокеТЧ(НайденнаяСтрока, НайденнаяСтрока.СтавкаНДС);
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ДоговорныеДокументыКлиентСервер.ПересчитатьСуммуВСтрокеТЧ(ТекущиеДанные, ТекущиеДанные.СтавкаНДС);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ДоговорныеДокументыКлиентСервер.ПересчитатьСуммуВСтрокеТЧ(ТекущиеДанные, ТекущиеДанные.СтавкаНДС);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ДоговорныеДокументыКлиентСервер.ПересчитатьСуммуНДСВСтрокеТЧ(ТекущиеДанные, ТекущиеДанные.СтавкаНДС);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ДоговорныеДокументыКлиентСервер.ПересчитатьЦенуПоСуммеВСтрокеТЧ(ТекущиеДанные, ТекущиеДанные.СтавкаНДС);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураСтрокаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда 
		Если ЗначениеЗаполнено(ТекущиеДанные.НоменклатураСтрока) Тогда 
			РеквизитыКарточки = ОбщегоНазначенияДокументооборотВызовСервера.ЗначенияРеквизитовОбъекта(
				ТекущиеДанные.Номенклатура, "СтавкаНДС, Цена");
			ТекущиеДанные.Цена = РеквизитыКарточки.Цена;
			ТекущиеДанные.СтавкаНДС = РеквизитыКарточки.СтавкаНДС;
			ДоговорныеДокументыКлиентСервер.ПересчитатьСуммуВСтрокеТЧ(ТекущиеДанные, ТекущиеДанные.СтавкаНДС);
		Иначе 
			ТекущиеДанные.Номенклатура = Неопределено;
			ТекущиеДанные.Цена = 0;
			ТекущиеДанные.СтавкаНДС = Неопределено;
			ТекущиеДанные.Сумма = 0;
			ТекущиеДанные.СуммаНДС = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураСтрокаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		ПараметрыФормы = Новый Структура;
		Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
			ПараметрыФормы.Вставить("ТекущаяСтрока", ТекущиеДанные.Номенклатура);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, Элемент,,,,,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураСтрокаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда 
			ПоказатьЗначение(, ТекущиеДанные.Номенклатура);
		ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.НоменклатураСтрока) Тогда 
			ТекущиеДанные.Номенклатура = ДоговорныеДокументы.СоздатьНоменклатуру(ТекущиеДанные.НоменклатураСтрока,
				ТекущиеДанные.Цена, ТекущиеДанные.СтавкаНДС);
			ТекущиеДанные.НоменклатураСтрока = Строка(ТекущиеДанные.Номенклатура);
			ПоказатьЗначение(, ТекущиеДанные.Номенклатура);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураСтрокаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		ТекущиеДанные.Номенклатура = ВыбранноеЗначение;
		ТекущиеДанные.НоменклатураСтрока = Строка(ТекущиеДанные.Номенклатура);
		РеквизитыКарточки = ОбщегоНазначенияДокументооборотВызовСервера.ЗначенияРеквизитовОбъекта(
			ТекущиеДанные.Номенклатура, "СтавкаНДС, Цена, ЕдиницаИзмерения");
		ТекущиеДанные.Цена = РеквизитыКарточки.Цена;
		ТекущиеДанные.ЕдиницаИзмерения = РеквизитыКарточки.ЕдиницаИзмерения;
		ТекущиеДанные.СтавкаНДС = РеквизитыКарточки.СтавкаНДС;
		ДоговорныеДокументыКлиентСервер.ПересчитатьСуммуВСтрокеТЧ(ТекущиеДанные, ТекущиеДанные.СтавкаНДС);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураСтрокаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СписокВыбора = ДоговорныеДокументы.ПолучитьДанныеВыбораНоменклатуры(Текст);
		Если СписокВыбора.Количество() > 0 Тогда 
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора = СписокВыбора;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДобавитьТовар(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьВидДокумента(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НеСоздаватьДокументПриЗакрытии", Истина);
	ПараметрыФормы.Вставить("ЗагруженИзПочты", ЗагруженИзПочты);
	
	ОткрытьФорму("Справочник.ВидыДокументов.ФормаОбъекта", ПараметрыФормы, Элементы.ВидыДокументов);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВидДокумента(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НеСоздаватьДокументПриЗакрытии", Истина);
	ПараметрыФормы.Вставить("ЗагруженИзПочты", ЗагруженИзПочты);
	
	Если ЗначениеЗаполнено(Объект.Родитель) Тогда 
		ПараметрыФормы.Вставить("Родитель", Объект.Родитель);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ВидыДокументов.ФормаОбъекта", ПараметрыФормы, Элементы.ВидыДокументов);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТовар(Команда)
	
	ВыделенныеСтроки = Элементы.ВсеТовары.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		ТекущиеДанные = Элементы.ВсеТовары.ДанныеСтроки(ВыделеннаяСтрока);
	
		Если ТекущиеДанные.ЭтоГруппа Тогда 
			ПеренестиНоменклатуруИзГруппы(ТекущиеДанные.Ссылка);
		Иначе 
			НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура", ТекущиеДанные.Ссылка));
			Если НайденныеСтроки.Количество() = 0 Тогда 
				НайденнаяСтрока = Объект.Товары.Добавить();
				НайденнаяСтрока.Номенклатура = ТекущиеДанные.Ссылка;
				НайденнаяСтрока.НоменклатураСтрока = Строка(ТекущиеДанные.Ссылка);
				НайденнаяСтрока.ЕдиницаИзмерения = ТекущиеДанные.ЕдиницаИзмерения;
				НайденнаяСтрока.Цена = ТекущиеДанные.Цена;
				НайденнаяСтрока.СтавкаНДС = ТекущиеДанные.СтавкаНДС;
				НайденнаяСтрока.Количество = 1;
				ДоговорныеДокументыКлиентСервер.ПересчитатьСуммуВСтрокеТЧ(НайденнаяСтрока, НайденнаяСтрока.СтавкаНДС);
			Иначе 
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
					НайденнаяСтрока.Количество = НайденнаяСтрока.Количество + 1;
					ДоговорныеДокументыКлиентСервер.ПересчитатьСуммуВСтрокеТЧ(НайденнаяСтрока, НайденнаяСтрока.СтавкаНДС);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВиды Тогда 
		
		ТекущаяСтрока = Элементы.ВидыДокументов.ТекущаяСтрока;
		Если Не ЗначениеЗаполнено(ТекущаяСтрока) Тогда 
			ПоказатьПредупреждение(, НСтр("ru = 'Выберите вид документа.'"));
			Возврат;
		КонецЕсли;	
		Объект.ВидДокумента = ТекущаяСтрока;
		УстановитьВидДокумента();
		
		ОткрытьЗакладкуРодители();
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРодители Тогда 
		
		ТекущаяСтрока = Элементы.Родители.ТекущаяСтрока;
		Если Не ЗначениеЗаполнено(ТекущаяСтрока) Тогда 
			Если ТипДокумента = ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.ДопСоглашение") Тогда 
				ТекстПредупреждения = НСтр("ru = 'Выберите, к какому документу относится создаваемое дополнительное соглашение.'");
			ИначеЕсли ТипДокумента = ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.Акт") Тогда 
				ТекстПредупреждения = НСтр("ru = 'Выберите, к какому документу относится создаваемый акт.'");
			ИначеЕсли ТипДокумента = ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.Накладная") Тогда 
				ТекстПредупреждения = НСтр("ru = 'Выберите, к какому документу относится создаваемая накладная.'");	
			ИначеЕсли ТипДокумента = ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.Счет") Тогда 
				ТекстПредупреждения = НСтр("ru = 'Выберите, к какому документу относится создаваемый счет.'");
			КонецЕсли;
				
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		КонецЕсли;	
		Объект.Родитель = ТекущаяСтрока;
		УстановитьРодителя();
		
		ОткрытьЗакладкуРеквизиты();
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРеквизиты Тогда 
		
		ОчиститьСообщения();
		Если Не ПроверитьЗаполнение() Тогда 
			Возврат;
		КонецЕсли;	
		
		ОткрытьЗакладкуТовары();
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаТовары Тогда 
		
		Если Объект.Товары.Количество() > 0 Тогда 
			Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
			
			Если УчитыватьНДС Тогда 
				Объект.СуммаНДСДокумента = Объект.Товары.Итог("СуммаНДС");
			КонецЕсли; 	
		КонецЕсли;
		
		ОткрытьЗакладкуФайлы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВиды Тогда 
		
	
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРодители Тогда 	
		
		Элементы.ГруппаЛево.Видимость = Истина;
		Элементы.ДекорацияОтступРеквизиты.Видимость = Истина;
		
		ОткрытьЗакладкуВиды(Ложь);
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРеквизиты Тогда 
		
		ОткрытьЗакладкуРодители(Ложь);
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаТовары Тогда 
		
		ОткрытьЗакладкуРеквизиты(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРеквизит(Команда)
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		НаборСвойств = ОбщегоНазначенияДокументооборотВызовСервера.ЗначениеРеквизитаОбъекта(Объект.ВидДокумента,
			"НаборСвойств");
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("НаборСвойств", НаборСвойств);
		ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", Ложь);
		ПараметрыФормы.Вставить("ТекущийНаборСвойств", НаборСвойств);
		
		ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта",
			ПараметрыФормы,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Не заполнен вид документа. 
              |Ввод дополнительных реквизитов не возможен.'"),,
			"Объект.ВидДокумента");
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьЗакладкуВиды(Далее = Истина)
	
	Если Далее = Ложь Тогда 
		Если ЭтоДоговор Тогда 
			СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(Объект);
			Нумерация.ОсвободитьНомер(СтруктураПараметров);
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВиды;
	Элементы.ФормаНазад.Доступность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗакладкуРодители(Далее = Истина)
	
	Если Далее = Ложь Тогда 
		Если Не ЭтоДоговор Тогда 
			СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(Объект);
			Нумерация.ОсвободитьНомер(СтруктураПараметров);
		КонецЕсли;
	КонецЕсли;
	
	ЕстьЗаполнениеРодителя = Не ЭтоДоговор И Не РодительИзвне;
	Если ЕстьЗаполнениеРодителя Тогда 
		Состояние = "МоиАктивные";
		УстановитьОтборСпискаРодителей();
		ОбщегоНазначенияДокументооборотКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
			Элементы.ОтборСостояниеДокумента, Состояние, "ВсеДокументы");
		
		ТипыДляОтбора = Новый Массив;
		ТипыДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.Договор"));
		
		Если ТипДокумента = ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.Акт")
		 Или ТипДокумента = ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.Накладная") Тогда 
		 
			ТипыДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.ДопСоглашение"));
		 
		ИначеЕсли ТипДокумента = ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.Счет") Тогда 
			
			ТипыДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.ДопСоглашение"));
			ТипыДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.Акт"));
			ТипыДляОтбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоговорныхДокументов.Накладная"));
			
		КонецЕсли;	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Родители, "ТипДокумента", ТипыДляОтбора);
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРодители;
		Элементы.ФормаНазад.Доступность = Истина;
		
		ЭтаФорма.ТекущийЭлемент = Элементы.Родители;
	Иначе
		Если Далее Тогда 
			ОткрытьЗакладкуРеквизиты(Далее);
		Иначе
			ОткрытьЗакладкуВиды(Далее);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗакладкуРеквизиты(Далее = Истина)
	
	Если Далее = Истина Тогда 
		ПрисвоитьНомер();
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРеквизиты;
	Элементы.ФормаНазад.Доступность = Истина;
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьОтборСпискаРодителей()
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	Если Состояние = "МоиАктивные" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Родители.Отбор,
			"Закрыт",
			Ложь);
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Родители.Отбор,
			"Ответственный",
			ТекущийПользователь);	
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Родители.Отбор,
			"Закрыт");
			
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Родители.Отбор,
			"Ответственный");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗакладкуТовары(Далее = Истина)
	
	ЕстьЗаполнениеТаблицыТоваров = ДоговорныеДокументы.ЕстьЗаполнениеТаблицыТоваров(Объект.ВидДокумента, ВидКонтрагента);
	Если ЕстьЗаполнениеТаблицыТоваров Тогда 
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаТовары;
		Элементы.ФормаНазад.Доступность = Истина;
	Иначе
		Если Далее Тогда 
			ОткрытьЗакладкуФайлы(Далее);
		Иначе
			ОткрытьЗакладкуРеквизиты(Далее);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗакладкуФайлы(Далее = Истина)
	
	ЗаполнитьФайлыПоВидуИКонтрагенту();
	ЗакрытьМастерИОткрытьФормуЭлемента();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидДокумента()
	
	РеквизитыШаблона = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидДокумента, 
		"Контрагент, СуммаДокумента, СрокДействия, Описание,
		|Тип, Автозаполнение");
		
	Если Не ЗначениеЗаполнено(Объект.Контрагент)
		И ЗначениеЗаполнено(РеквизитыШаблона.Контрагент) Тогда 	
		Объект.Контрагент = РеквизитыШаблона.Контрагент;
		Контрагент = Строка(Объект.Контрагент);
		ВидКонтрагента = Объект.Контрагент.ЮридическоеФизическоеЛицо;
		Элементы.ВидКонтрагента.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Объект.СуммаДокумента = РеквизитыШаблона.СуммаДокумента;
	Объект.Описание = РеквизитыШаблона.Описание;
	
	// Согласующие
	Объект.Согласующие.Очистить();
	Если Объект.ВидДокумента.Согласующие.Количество() > 0 Тогда 
		Для Каждого Строка Из Объект.ВидДокумента.Согласующие Цикл
			НоваяСтрока = Объект.Согласующие.Добавить();
			НоваяСтрока.Исполнитель = Строка.Исполнитель;
		КонецЦикла;	
	КонецЕсли;	
	
	// Этапы
	Объект.Этапы.Очистить();
	Если Объект.ВидДокумента.Этапы.Количество() > 0 Тогда 
		Для Каждого Строка Из Объект.ВидДокумента.Этапы Цикл
			НоваяСтрока = Объект.Этапы.Добавить();
			НоваяСтрока.Этап = Строка.Этап;
			Если ЗначениеЗаполнено(Строка.Срок) Тогда 
				Если ЗначениеЗаполнено(Объект.ДатаДокумента) Тогда 
					НоваяСтрока.Срок = Объект.ДатаДокумента + 24*3600*Строка.Срок;
				Иначе	
					НоваяСтрока.Срок = ТекущаяДатаСеанса() + 24*3600*Строка.Срок;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Товары
	Объект.Товары.Очистить();
	Если Объект.ВидДокумента.Товары.Количество() > 0 Тогда 
		Для Каждого СтрокаНоменклатуры Из Объект.ВидДокумента.Товары Цикл 
			НоваяСтрока = Объект.Товары.Добавить();
			НоваяСтрока.Номенклатура = СтрокаНоменклатуры.Номенклатура;
			НоваяСтрока.НоменклатураСтрока = Строка(СтрокаНоменклатуры.Номенклатура);
			НоваяСтрока.ЕдиницаИзмерения = СтрокаНоменклатуры.ЕдиницаИзмерения;
			НоваяСтрока.Количество = СтрокаНоменклатуры.Количество;
			РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				СтрокаНоменклатуры.Номенклатура, "Цена, СтавкаНДС");
			НоваяСтрока.Цена = РеквизитыНоменклатуры.Цена;
			НоваяСтрока.СтавкаНДС = РеквизитыНоменклатуры.СтавкаНДС;
			
			ДоговорныеДокументыКлиентСервер.ПересчитатьСуммуВСтрокеТЧ(
				НоваяСтрока, РеквизитыНоменклатуры.СтавкаНДС);
		КонецЦикла;
	КонецЕсли;
	
	ТипДокумента = РеквизитыШаблона.Тип;
	ЭтоДоговор = (ТипДокумента = Перечисления.ТипыДоговорныхДокументов.Договор);
	
	Если Не ЗначениеЗаполнено(ВидКонтрагента) Тогда 
		ДляКогоТаблица = Объект.ВидДокумента.ПравилаАвтозаполнения.Выгрузить(, "ДляКого");
		ДляКогоТаблица.Свернуть("ДляКого");
		
		Если ДляКогоТаблица.Количество() = 1 И ЗначениеЗаполнено(ДляКогоТаблица[0].ДляКого) Тогда 
			ВидКонтрагента = ДляКогоТаблица[0].ДляКого;
		КонецЕсли;
	КонецЕсли;
	
	// Реквизиты для автозаполнения
	УстановитьРеквизитыДляАвтозаполнения();
	
	СрокДействия = РеквизитыШаблона.СрокДействия;
	Если ЗначениеЗаполнено(СрокДействия) Тогда
		Объект.ДатаНачалаДействия = ТекущаяДата();
		ПересчитатьСрокДействия(Объект.ДатаНачалаДействия, Объект.ДатаОкончанияДействия, СрокДействия);
	КонецЕсли;
	
	Если ЭтоДоговор Тогда 
		Элементы.ДекорацияРеквизиты.Заголовок = НСтр("ru = 'Реквизиты договора'");
		Элементы.НомерДокумента.Подсказка = НСтр("ru = 'Номер договора'");
		Элементы.ДатаДокумента.Подсказка = НСтр("ru = 'Дата договора'");
		Элементы.Сумма.Подсказка = НСтр("ru = 'Сумма договора'");
		Элементы.ДатаНачалаДействия.Подсказка = НСтр("ru = 'Дата, начиная с которой договор вступает в силу'");
		Элементы.ДатаОкончанияДействия.Подсказка = НСтр("ru = 'Дата, после которой договор не действует'");
		Элементы.ГруппаПериодДействия.Видимость = Истина;
		
	ИначеЕсли ТипДокумента = Перечисления.ТипыДоговорныхДокументов.ДопСоглашение Тогда 	
		Элементы.ДекорацияРеквизиты.Заголовок = НСтр("ru = 'Реквизиты дополнительного соглашения'");
		Элементы.НомерДокумента.Подсказка = НСтр("ru = 'Номер дополнительного соглашения'");
		Элементы.ДатаДокумента.Подсказка = НСтр("ru = 'Дата дополнительного соглашения'");
		Элементы.Сумма.Подсказка = НСтр("ru = 'Сумма дополнительного соглашения'");
		Элементы.ДатаНачалаДействия.Подсказка = НСтр("ru = 'Дата, начиная с которой дополнительное соглашение вступает в силу'");
		Элементы.ДатаОкончанияДействия.Подсказка = НСтр("ru = 'Дата, после которой дополнительное соглашение не действует'");
		Элементы.ГруппаПериодДействия.Видимость = Истина;
		
	ИначеЕсли ТипДокумента = Перечисления.ТипыДоговорныхДокументов.Акт Тогда 
		Элементы.ДекорацияРеквизиты.Заголовок = НСтр("ru = 'Реквизиты акта'");
		Элементы.НомерДокумента.Подсказка = НСтр("ru = 'Номер акта'");
		Элементы.ДатаДокумента.Подсказка = НСтр("ru = 'Дата акта'");
		Элементы.Сумма.Подсказка = НСтр("ru = 'Сумма акта'");
		Элементы.ГруппаПериодДействия.Видимость = Ложь;
		
	ИначеЕсли ТипДокумента = Перечисления.ТипыДоговорныхДокументов.Счет Тогда
		Элементы.ДекорацияРеквизиты.Заголовок = НСтр("ru = 'Реквизиты счета'");
		Элементы.НомерДокумента.Подсказка = НСтр("ru = 'Номер счета'");
		Элементы.ДатаДокумента.Подсказка = НСтр("ru = 'Дата счета'");
		Элементы.Сумма.Подсказка = НСтр("ru = 'Сумма счета'");
		Элементы.ГруппаПериодДействия.Видимость = Ложь;
		
	ИначеЕсли ТипДокумента = Перечисления.ТипыДоговорныхДокументов.Накладная Тогда 
		Элементы.ДекорацияРеквизиты.Заголовок = НСтр("ru = 'Реквизиты накладной'");
		Элементы.НомерДокумента.Подсказка = НСтр("ru = 'Номер накладной'");
		Элементы.ДатаДокумента.Подсказка = НСтр("ru = 'Дата накладной'");
		Элементы.Сумма.Подсказка = НСтр("ru = 'Сумма накладной'");
		Элементы.ГруппаПериодДействия.Видимость = Ложь;
		
	КонецЕсли;
	
	Если ЭтоДоговор Или ТипДокумента = Перечисления.ТипыДоговорныхДокументов.ДопСоглашение Тогда 
		Элементы.ГруппаПериодДействия.Видимость = Истина;
	Иначе 
		Элементы.ГруппаПериодДействия.Видимость = Ложь;
	КонецЕсли;
	
	Если ЭтоДоговор Тогда 
		Элементы.ВидКонтрагента.Видимость = Истина;
	Иначе
		Элементы.ВидКонтрагента.Видимость = Ложь;
	КонецЕсли;
	
	ЭтаФорма.Заголовок = НСтр("ru = 'Создание документа'") + " (" + Объект.ВидДокумента + ")";
	
	// Обработчик механизма "Свойства"
	//Копирование дополнительных реквизитов шаблона
	Если ЗначениеЗаполнено(Объект.ВидДокумента) 
		И ЭтаФорма.Свойства_ИспользоватьСвойства Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		
		Для Каждого Реквизит Из Объект.ВидДокумента.ДополнительныеРеквизиты Цикл
			СтруктураПоиска = Новый Структура("Свойство", Реквизит.Свойство);
			МассивСтрок = ЭтаФорма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(СтруктураПоиска);
			Если МассивСтрок.Количество() > 0 Тогда
				НоваяСтрока = МассивСтрок[0];
				ЭтаФорма[НоваяСтрока.ИмяРеквизитаЗначение] = Реквизит.Значение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРеквизитыДляАвтозаполнения()
	
	Элементы.НаименованиеПолное.Видимость = Ложь;
	Элементы.ВЛице.Видимость = Ложь;
	Элементы.ДействуетНаОсновании.Видимость = Ложь;
	Элементы.ПаспортныеДанные.Видимость = Ложь;
	Элементы.ВсеРеквизитыСтрокой.Видимость = Ложь;
	Элементы.РасшифровкаПодписи.Видимость = Ложь;
	Элементы.ДолжностьПодписывающего.Видимость = Ложь;
	
	ВидимостьИНН = Элементы.ИНН.Видимость;
	Элементы.ИНН.Видимость = Ложь;
	
	ВозможноЗаполнениеПоИНН = (СтандартныеПодсистемыСервер.ПараметрыАутентификацииНаСайте() <> Неопределено);
	
	ЕстьАвтозаполнение = ДоговорныеДокументы.ЕстьАвтозаполнение(Объект.ВидДокумента, ВидКонтрагента);
	Если ЕстьАвтозаполнение Тогда 
		
		Если ЗначениеЗаполнено(Объект.Контрагент) Тогда 
			ЗначенияРеквизитов = ОбщегоНазначенияДокументооборотВызовСервера.ЗначенияРеквизитовОбъекта(Объект.Контрагент,
				"ИНН, НаименованиеПолное, ВЛице, ДействуетНаОсновании, ПаспортныеДанные, ДолжностьПодписывающего, РасшифровкаПодписи, ВсеРеквизитыСтрокой");
		
			НаименованиеПолное = ЗначенияРеквизитов.НаименованиеПолное;
			ВЛице = ЗначенияРеквизитов.ВЛице;
			ДействуетНаОсновании = ЗначенияРеквизитов.ДействуетНаОсновании;
			ПаспортныеДанные = ЗначенияРеквизитов.ПаспортныеДанные;
			ВсеРеквизитыСтрокой = ЗначенияРеквизитов.ВсеРеквизитыСтрокой;
			ДолжностьПодписывающего = ЗначенияРеквизитов.ДолжностьПодписывающего;
			РасшифровкаПодписи = ЗначенияРеквизитов.РасшифровкаПодписи;
			ИНН = ЗначенияРеквизитов.ИНН;
		КонецЕсли;
		
		Если ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда 
			
			Если РеквизитУчаствуетВЗаполнении("НаименованиеПолное") Тогда 
				Элементы.НаименованиеПолное.Видимость = Истина;
			КонецЕсли;
			
			Если РеквизитУчаствуетВЗаполнении("ВЛице") Тогда 
				Элементы.ВЛице.Видимость = Истина;
			КонецЕсли;
			
			Если РеквизитУчаствуетВЗаполнении("ДействуетНаОсновании") Тогда 
				Элементы.ДействуетНаОсновании.Видимость = Истина;
				Элементы.ДействуетНаОсновании.ПодсказкаВвода = НСтр("ru = 'Устава \ доверенности'");
			КонецЕсли;
			
			Если РеквизитУчаствуетВЗаполнении("ВсеРеквизитыСтрокой") Тогда 
				Элементы.ВсеРеквизитыСтрокой.Видимость = Истина;
				Элементы.ВсеРеквизитыСтрокой.ПодсказкаВвода = НСтр("ru = 'ИНН, КПП, адрес, банковский счет и проч.'");
			КонецЕсли;
			
			Если РеквизитУчаствуетВЗаполнении("РасшифровкаПодписи") Тогда 
				Элементы.РасшифровкаПодписи.Видимость = Истина;
			КонецЕсли;
			
			Если РеквизитУчаствуетВЗаполнении("ДолжностьПодписывающего") Тогда 
				Элементы.ДолжностьПодписывающего.Видимость = Истина;
			КонецЕсли;
			
			Если ВозможноЗаполнениеПоИНН И
				(Элементы.ВсеРеквизитыСтрокой.Видимость Или
				Элементы.ВЛице.Видимость Или
				Элементы.РасшифровкаПодписи.Видимость Или
				Элементы.ДолжностьПодписывающего.Видимость) Тогда 
				Элементы.ИНН.Видимость = Истина;
			КонецЕсли;
			
		ИначеЕсли ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
			
			Если РеквизитУчаствуетВЗаполнении("ПаспортныеДанные") Тогда 
				Элементы.ПаспортныеДанные.Видимость = Истина;
			КонецЕсли;	
			
			Если РеквизитУчаствуетВЗаполнении("ВсеРеквизитыСтрокой") Тогда 
				Элементы.ВсеРеквизитыСтрокой.Видимость = Истина;
				Элементы.ВсеРеквизитыСтрокой.ПодсказкаВвода = НСтр("ru = 'Паспорт, дата рождения, адрес и проч.'");
			КонецЕсли;	
			
			Если РеквизитУчаствуетВЗаполнении("РасшифровкаПодписи") Тогда 
				Элементы.РасшифровкаПодписи.Видимость = Истина;
				Если Не ЗначениеЗаполнено(РасшифровкаПодписи) Тогда 
					РасшифровкаПодписи = ПолучитьРасшифровкуПодписи(Контрагент);
				КонецЕсли;
			КонецЕсли;	
				
		ИначеЕсли ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель Тогда
			
			Если РеквизитУчаствуетВЗаполнении("ДействуетНаОсновании") Тогда 
				Элементы.ДействуетНаОсновании.Видимость = Истина;
				Элементы.ДействуетНаОсновании.ПодсказкаВвода = "Свидетельства";
			КонецЕсли;	
			
			Если РеквизитУчаствуетВЗаполнении("ВсеРеквизитыСтрокой") Тогда 
				Элементы.ВсеРеквизитыСтрокой.Видимость = Истина;
				Элементы.ВсеРеквизитыСтрокой.ПодсказкаВвода = НСтр("ru = 'ИНН, № свидетельства, адрес, банковский счет и проч.'");
			КонецЕсли;	
			
			Если РеквизитУчаствуетВЗаполнении("РасшифровкаПодписи") Тогда 
				Элементы.РасшифровкаПодписи.Видимость = Истина;
				Если Не ЗначениеЗаполнено(РасшифровкаПодписи) Тогда 
					РасшифровкаПодписи = ПолучитьРасшифровкуПодписи(Контрагент);
				КонецЕсли;
			КонецЕсли;
			
			Если ВозможноЗаполнениеПоИНН И
				(Элементы.ВсеРеквизитыСтрокой.Видимость Или
				Элементы.РасшифровкаПодписи.Видимость Или
				Элементы.ДействуетНаОсновании.Видимость) Тогда 
				Элементы.ИНН.Видимость = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидимостьИНН И ЗначениеЗаполнено(ИНН) И Не Элементы.ИНН.Видимость Тогда 
		ИНН = "";
	КонецЕсли;
	
	НетЗаполненияТаблицыТоваровДляВсех = 
		Не ДоговорныеДокументы.ЕстьЗаполнениеТаблицыТоваров(Объект.ВидДокумента, Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
		И Не ДоговорныеДокументы.ЕстьЗаполнениеТаблицыТоваров(Объект.ВидДокумента, Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		И Не ДоговорныеДокументы.ЕстьЗаполнениеТаблицыТоваров(Объект.ВидДокумента, Перечисления.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель);
		
	ЕстьЗаполнениеТаблицыТоваров = ДоговорныеДокументы.ЕстьЗаполнениеТаблицыТоваров(Объект.ВидДокумента, ВидКонтрагента);
	
	Если НетЗаполненияТаблицыТоваровДляВсех Тогда 
		ВидимостьСуммы = Истина;
	ИначеЕсли Не ЗначениеЗаполнено(ВидКонтрагента) Тогда 	
		ВидимостьСуммы = Ложь;
	ИначеЕсли ЕстьЗаполнениеТаблицыТоваров Тогда 
		ВидимостьСуммы = Ложь;
	Иначе	
		ВидимостьСуммы = Истина;
	КонецЕсли;
	
	Элементы.ГруппаСумма.Видимость = ВидимостьСуммы;
	
	УчитыватьНДС = ДоговорныеДокументы.УчитыватьНДС();
	Если УчитыватьНДС Тогда 
		Элементы.ГруппаСуммаНДС.Видимость = ВидимостьСуммы;
	Иначе	
		Элементы.ГруппаСуммаНДС.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Функция РеквизитУчаствуетВЗаполнении(ИмяРеквизита)
	
	Возврат ДоговорныеДокументы.РеквизитУчаствуетВЗаполнении(Объект.ВидДокумента, ВидКонтрагента, ИмяРеквизита, "Контрагент");

КонецФункции

&НаСервере
Процедура ЗаполнитьФайлыПоВидуИКонтрагенту()
	
	// Файлы из вида
	ПодчиненныеФайлы = РаботаСФайламиВызовСервера.ПолучитьВсеПодчиненныеФайлы(Объект.ВидДокумента, Ложь);
	Если ПодчиненныеФайлы.Количество() > 0 Или ФайлыДобавленные.Количество() > 0 Тогда 
		
		Для Каждого ПодчиненныйФайл Из ПодчиненныеФайлы Цикл
			
			НайденнаяСтрока = Объект.ВидДокумента.ПравилаАвтозаполнения.Найти(ПодчиненныйФайл, "ШаблонФайла");
			Если НайденнаяСтрока <> Неопределено Тогда 
				Если ЗначениеЗаполнено(НайденнаяСтрока.ДляКого) Тогда 
					Если НайденнаяСтрока.ДляКого <> ВидКонтрагента Тогда 
						Продолжить;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;
			
			ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайла(ПодчиненныйФайл);
				АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДанныеФайла, УникальныйИдентификатор);
			
			НоваяСтрока = ФайлыДобавленные.Добавить();
			НоваяСтрока.Наименование = ДанныеФайла.ПолноеНаименованиеВерсии;
			НоваяСтрока.ПолныйПуть = АдресВременногоХранилища;
			НоваяСтрока.ИндексКартинки = ФайловыеФункцииКлиентСервер.ПолучитьИндексПиктограммыФайла(ДанныеФайла.Расширение);
			НоваяСтрока.ШаблонОснованиеДляСоздания = ПодчиненныйФайл.Ссылка;
			НоваяСтрока.ДобавленИзШаблона = ЗначениеЗаполнено(НоваяСтрока.ШаблонОснованиеДляСоздания);
		КонецЦикла;
		
		КоличествоФайловТаблицы = ФайлыДобавленные.Количество();
		КоличествоФайлов = КоличествоФайловТаблицы;
	Иначе	
		КоличествоФайловТаблицы = 0;
		КоличествоФайлов = 0;
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьРодителя()
	
	РеквизитыРодителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Родитель,
		"Контрагент, ВидДокумента.Тип");
	
	Объект.Контрагент = РеквизитыРодителя.Контрагент;
	Контрагент = Строка(Объект.Контрагент);
	ВидКонтрагента = Объект.Контрагент.ЮридическоеФизическоеЛицо;
	Элементы.ВидКонтрагента.ТолькоПросмотр = Истина;
	
	УстановитьРеквизитыДляАвтозаполнения();
	
	Элементы.ГруппаЛево.Видимость = Ложь;
	Элементы.ДекорацияОтступРеквизиты.Видимость = Ложь;
	
КонецПроцедуры	

&НаСервере
Процедура ПрисвоитьНомер()
	
	// Присвоение номера
	СпособНумерации = Объект.ВидДокумента.СпособНумерации;
	Если СпособНумерации = Перечисления.СпособыНумерации.Автоматически Тогда 
		Объект.ДатаДокумента = ТекущаяДатаСеанса();
		Нумерация.СформироватьЧисловойНомерДокумента(Объект, Объект.ЧисловойНомер);
			
		ОписанияОшибок = Новый СписокЗначений;
		Нумерация.СформироватьСтроковыйНомерДокумента(Объект, Объект.НомерДокумента, ОписанияОшибок);
		АвтоматическийНомер = Объект.НомерДокумента;
		
		Для Каждого ОписаниеОшибки Из ОписанияОшибок Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ОписаниеОшибки.Представление,,
			ОписаниеОшибки.Значение,
					"Объект");
		КонецЦикла;
	Иначе
		Объект.ДатаДокумента = ТекущаяДатаСеанса();
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура ПересчитатьСрокДействия(ДатаНачалаДействия, ДатаОкончанияДействия, СрокДействия)

	ДатаОкончанияДействия = НачалоДня(ДатаНачалаДействия) + СрокДействия * 24 * 3600;
	
КонецПроцедуры	

&НаСервере
Процедура ВыполнитьПакетноеОбновлениеВерсийФайлов(МассивФайловДляОбновления)
	
	Для Каждого ЗаполненныйФайл Из МассивФайловДляОбновления Цикл
		АвтозаполнениеШаблоновФайловСервер.ОбновитьВерсиюИзДвоичныхДанных(ЗаполненныйФайл.ДвоичныеДанные,
			ЗаполненныйФайл.ТекущаяВерсия, "Автозаполнение шаблона");
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНастройкиАвтозаполненийШаблона(Файл, Шаблон, Документ)  
	
	СтруктураВозврата = Новый Структура("ВыполнятьНаСервере, РасширениеШаблона,НастройкиЗамены, ДанныеФайла, ДвоичныеДанные, ТекущаяВерсия");
	НаСервере = Константы.ИзменениеФайловMSWordТолькоНаСервере.Получить();
	ПеремДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайла(Файл.Ссылка);
	
	СтруктураВозврата.ВыполнятьНаСервере = НаСервере;
	СтруктураВозврата.РасширениеШаблона = НРег(Файл.ТекущаяВерсияРасширение);
	
	Если Шаблон = Неопределено Тогда
		Шаблон = Файл;
	КонецЕсли;
		
	СтруктураВозврата.НастройкиЗамены = АвтозаполнениеШаблоновФайловСервер.ПолучитьМассивАвтозаполненийШаблона(Файл, Шаблон, Документ);
	СтруктураВозврата.ДанныеФайла = ПеремДанныеФайла;
	
	ТекущаяВерсия = Файл.ТекущаяВерсия.ПолучитьОбъект();
	ИмяСРасширениемФайла = ТекущаяВерсия.ПолноеНаименование + "." + ТекущаяВерсия.Расширение;
	ДвоичныеДанныеФайла = АвтозаполнениеШаблоновФайловСервер.ПолучитьДвоичныеДанныеФайла(Файл);
	
	СтруктураВозврата.ДвоичныеДанные = ДвоичныеДанныеФайла;
	СтруктураВозврата.ТекущаяВерсия = Файл.ТекущаяВерсия;
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура ЗакрытьМастерИОткрытьФормуЭлемента()
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Закрыть();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Объект.Ссылка);
	
	Если ЗаполненныеФайлы.Количество() = 1 Тогда 
		ПараметрыФормы.Вставить("ЗаполненныйФайлДляОткрытия", ЗаполненныеФайлы.Получить(0).Файл);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ЭтоТолькоЧтоСозданныйДокумент", Истина);
	
	ОткрытьФорму("Справочник.ДоговорныеДокументы.Форма.ФормаЭлемента", ПараметрыФормы, ВладелецФормы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеВыбораКонтрагентов(Текст, Отбор = Неопределено)
	
	Параметры = Новый Структура; 
	Параметры.Вставить("СтрокаПоиска", Текст);
	
	Если ТипЗнч(Отбор) = Тип("Структура") Тогда 
		Параметры.Вставить("Отбор", Отбор);
	КонецЕсли;	
	
	Возврат Справочники.Контрагенты.ПолучитьДанныеВыбора(Параметры);
	
КонецФункции

&НаСервере
Процедура ПеренестиНоменклатуруИзГруппы(ГруппаНоменклатуры)
	
	ДоговорныеДокументы.ПеренестиНоменклатуруИзГруппы(ЭтаФорма, ГруппаНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьДанныеВыбораДействуетНаОсновании(Текст)
	
	ПолныйСписокВыбора = Новый СписокЗначений;
	Если ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо") Тогда 
		ПолныйСписокВыбора.Добавить("Устава");
		ПолныйСписокВыбора.Добавить("Доверенности №");
	ИначеЕсли ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель") Тогда 
		ПолныйСписокВыбора.Добавить("Свидетельства №");
	КонецЕсли;
	
	СписокВыбора = Новый СписокЗначений;
	Для Каждого ЭлементСписка Из ПолныйСписокВыбора Цикл
		Если Лев(НРег(ЭлементСписка.Значение), СтрДлина(Текст)) = НРег(Текст) Тогда 
			СписокВыбора.Добавить(ЭлементСписка.Значение);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат СписокВыбора;
	
КонецФункции

&НаКлиенте
Функция ПолучитьДанныеВыбораДолжностьПодписывающего(Текст)
	
	ПолныйСписокВыбора = Новый СписокЗначений;
	ПолныйСписокВыбора.Добавить("Генеральный директор");
	ПолныйСписокВыбора.Добавить("Директор");
	ПолныйСписокВыбора.Добавить("Заведующий");
	ПолныйСписокВыбора.Добавить("Начальник отдела");
	ПолныйСписокВыбора.Добавить("Руководитель");
	ПолныйСписокВыбора.Добавить("Управляющий");
	
	СписокВыбора = Новый СписокЗначений;
	Для Каждого ЭлементСписка Из ПолныйСписокВыбора Цикл
		Если Лев(НРег(ЭлементСписка.Значение), СтрДлина(Текст)) = НРег(Текст) Тогда 
			СписокВыбора.Добавить(ЭлементСписка.Значение);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат СписокВыбора;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьРеквизитыПоИНННаКлиенте(СтрокаИНН)
	
	ОписаниеОшибки = "";
	ЗаполнитьРеквизитыПоИНННаСервере(СтрокаИНН, ОписаниеОшибки);
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		// Обработка ошибок
		Если ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда
			ТекстВопроса = НСтр("ru='Для автоматического заполнения реквизитов контрагентов
				|необходимо подключиться к Интернет-поддержке пользователей.
				|Подключиться сейчас?'");
			ДопПараметры = Новый Структура("СтрокаПоиска,ЗаполнениеПоИНН", СтрокаИНН, Истина);
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект, ДопПараметры);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		ИначеЕсли ОписаниеОшибки = "НеУказанПароль" Тогда
			ТекстВопроса = НСтр("ru='Необходимо указать пароль к Интернет-поддержке пользователей
				|и установить флажок ""Запомнить пароль"".
				|Указать сейчас?'");
			ДопПараметры = Новый Структура("СтрокаПоиска,ЗаполнениеПоИНН", СтрокаИНН, Истина);
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект, ДопПараметры);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		ИначеЕсли ОписаниеОшибки = "Сервис1СКонтрагентНеПодключен" Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ИдентификаторМестаВызова", "forma_kontragenta");
			ОткрытьФорму("ОбщаяФорма.Сервис1СКонтрагентНеПодключен", ПараметрыФормы, ЭтотОбъект);
		Иначе
			ПоказатьПредупреждение(, ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

// Заполняет реквизиты по ИНН, возвращая, возможно, описание ошибки.
//
&НаСервере
Процедура ЗаполнитьРеквизитыПоИНННаСервере(СтрокаИНН, ОписаниеОшибки = "")
	
	ЭтоЮридическоеЛицо = (ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	Если ЭтоЮридическоеЛицо Тогда
		РеквизитыКонтрагента = ДанныеЕдиныхГосРеестров.РеквизитыЮридическогоЛицаПоИНН(СтрокаИНН);
	Иначе
		РеквизитыКонтрагента = ДанныеЕдиныхГосРеестров.РеквизитыПредпринимателяПоИНН(СтрокаИНН);
	КонецЕсли;
	
	// Обработка ошибки.
	Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
		ОписаниеОшибки = РеквизитыКонтрагента.ОписаниеОшибки;
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при заполнении по ИНН'", Метаданные.ОсновнойЯзык.КодЯзыка),
			УровеньЖурналаРегистрации.Ошибка,,,
			ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	Если ЭтоЮридическоеЛицо Тогда
		
		Если РеквизитыКонтрагента.Свойство("КПП") И ЗначениеЗаполнено(РеквизитыКонтрагента.КПП) Тогда
			КПП = РеквизитыКонтрагента.КПП;
		Иначе
			КПП = Лев(ИНН, 4) + "01001";
		КонецЕсли;
		
		Контрагент = РеквизитыКонтрагента.НаименованиеСокращенное;
		НаименованиеПолное = РеквизитыКонтрагента.НаименованиеПолное;
		
		ВсеРеквизитыСтрокой = Контрагент;
		ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
		
		Если ЗначениеЗаполнено(КПП) Тогда
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой 
				+ СтрШаблон(НСтр("ru = 'ИНН %1, КПП %2'"), ИНН, КПП);
		Иначе
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой
				+ СтрШаблон(НСтр("ru = 'ИНН %1'"), ИНН);
		КонецЕсли;
		ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
		
		Если РеквизитыКонтрагента.Свойство("ЮридическийАдрес")
			И ТипЗнч(РеквизитыКонтрагента.ЮридическийАдрес) = Тип("Структура") Тогда
			
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой 
				+ РеквизитыКонтрагента.ЮридическийАдрес.Представление;
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
			
		КонецЕсли;
		
	Иначе // Предприниматель
		
		КПП = "";
		Контрагент = РеквизитыКонтрагента.Наименование;
		
		ВсеРеквизитыСтрокой = Контрагент;
		ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
		
		ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой 
			+ СтрШаблон(НСтр("ru = 'ИНН %1'"), ИНН);
		ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
		
		РасшифровкаПодписи = РаботаСКонтрагентамиВызовСервера.ПолучитьРасшифровкуПодписи(Контрагент);
		
		// ОГРНИП.
		Если РеквизитыКонтрагента.Свойство("РегистрационныйНомер")
			И ЗначениеЗаполнено(РеквизитыКонтрагента.РегистрационныйНомер) Тогда
			
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой 
				+ СтрШаблон(НСтр("ru = 'ОГРНИП %1'"), РеквизитыКонтрагента.РегистрационныйНомер);
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
			
		КонецЕсли;
		
		// Свидетельство.
		Если РеквизитыКонтрагента.Свойство("СвидетельствоОРегистрации")
			И ТипЗнч(РеквизитыКонтрагента.СвидетельствоОРегистрации) = Тип("Структура") Тогда
			
			ДействуетНаОсновании = СтрШаблон(НСтр("ru = 'свидетельства %1 %2 от %3'"),
				РеквизитыКонтрагента.СвидетельствоОРегистрации.Серия,
				РеквизитыКонтрагента.СвидетельствоОРегистрации.Номер,
				Формат(РеквизитыКонтрагента.СвидетельствоОРегистрации.Дата, "ДФ=dd.MM.yy")
				);
			
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой 
				+ СтрШаблон(НСтр("ru = 'Свидетельство %1 %2 от %3'"),
				РеквизитыКонтрагента.СвидетельствоОРегистрации.Серия,
				РеквизитыКонтрагента.СвидетельствоОРегистрации.Номер,
				Формат(РеквизитыКонтрагента.СвидетельствоОРегистрации.Дата, "ДФ=dd.MM.yy")
				);
			ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + Символы.ПС;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитыКонтрагента.Свойство("Руководитель")
		И ЗначениеЗаполнено(РеквизитыКонтрагента.Руководитель) Тогда
		
		Если РеквизитыКонтрагента.Руководитель.Свойство("Должность")
			И ЗначениеЗаполнено(РеквизитыКонтрагента.Руководитель.Должность) Тогда
			ДолжностьПодписывающего = РеквизитыКонтрагента.Руководитель.Должность;
		КонецЕсли;
		
		Если РеквизитыКонтрагента.Руководитель.Свойство("Представление")
			И ЗначениеЗаполнено(РеквизитыКонтрагента.Руководитель.Представление) Тогда
			ФИО = РеквизитыКонтрагента.Руководитель.Представление;
			РасшифровкаПодписи = РаботаСКонтрагентамиВызовСервера.ПолучитьРасшифровкуПодписи(ФИО);
		Иначе
			ФИО = "";
		КонецЕсли;
			
		Если Прав(ВРег(СокрЛП(ФИО)), 3) = "ВНА" Тогда
			Пол = 2; // женский
		Иначе
			Пол = 1; // мужской
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДолжностьПодписывающего) Тогда
			ВЛице = СтрШаблон("%1 %2",
				СклонениеПредставленийОбъектовВызовСервера.ПросклонятьПредставление(ДолжностьПодписывающего, 2),
				СклонениеПредставленийОбъектовВызовСервера.ПросклонятьФИО(ФИО, 2, , Пол));
		Иначе
			ВЛице = 
				СклонениеПредставленийОбъектовВызовСервера.ПросклонятьФИО(ФИО, 2, , Пол);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьРасшифровкуПодписи(Знач ФИО)
	
	ФИО = СтрЗаменить(ФИО, НСтр("ru = 'ИП'"), "");
	ФИО = СтрЗаменить(ФИО, НСтр("ru = 'Индивидуальный предприниматель'"), "");
	ФИО = СтрЗаменить(ФИО, НСтр("ru = 'индивидуальный предприниматель'"), "");
	ФИО = СокрЛП(ФИО);
	
	МассивСлов = СтрРазделить(ФИО, " .", Ложь);
	
	Если МассивСлов.Количество() = 3 Тогда
		Возврат СтрШаблон("%1.%2. %3",
			Лев(МассивСлов[1], 1),
			Лев(МассивСлов[2], 1),
			МассивСлов[0]);
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция НайтиКонтрагентаПоИНН(ИНН)
	
	Возврат Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", ИНН);
	
КонецФункции	

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства

#КонецОбласти
