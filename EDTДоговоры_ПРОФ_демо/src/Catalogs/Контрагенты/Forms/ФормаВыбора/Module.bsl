
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("АдресОтправителя") Тогда
		АдресОтправителя = Параметры.АдресОтправителя;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект, Элементы.КомандыСлева);
	// Конец СтандартныеПодсистемы.Печать
	
	НастройкиФормы = ОбщегоНазначения.ХранилищеСистемныхНастроекЗагрузить(ИмяФормы + "/ТекущиеДанные", "");
	Если НастройкиФормы = Неопределено Или НастройкиФормы.Получить("ПоказыватьУдаленные") = Неопределено Тогда
		Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
		УстановитьОтбор();
	КонецЕсли;
	
	ДоговорныеДокументы.СписокДокументовУсловноеОформлениеПомеченныхНаУдаление(Список);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки["ПоказыватьУдаленные"] <> Неопределено Тогда
		ПоказыватьУдаленные = Настройки["ПоказыватьУдаленные"];
		Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
		УстановитьОтбор();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЮрЛицо(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ЮридическоеФизическоеЛицо", ЮридическоеФизическоеЛицо);
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	Если ЗначениеЗаполнено(АдресОтправителя) Тогда
		ПараметрыФормы.Вставить("АдресОтправителя", АдресОтправителя);
	КонецЕсли;	
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлемента",
		ПараметрыФормы,
		Элементы.Список,
		ЮридическоеФизическоеЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФизЛицо(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ЮридическоеФизическоеЛицо", ЮридическоеФизическоеЛицо);
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	Если ЗначениеЗаполнено(АдресОтправителя) Тогда
		ПараметрыФормы.Вставить("АдресОтправителя", АдресОтправителя);
	КонецЕсли;	
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлемента",
		ПараметрыФормы,
		Элементы.Список,
		ЮридическоеФизическоеЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИП(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель");
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ЮридическоеФизическоеЛицо", ЮридическоеФизическоеЛицо);
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	Если ЗначениеЗаполнено(АдресОтправителя) Тогда
		ПараметрыФормы.Вставить("АдресОтправителя", АдресОтправителя);
	КонецЕсли;	
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлемента",
		ПараметрыФормы,
		Элементы.Список,
		ЮридическоеФизическоеЛицо);
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	УстановитьОтбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	
	ЗначенияЗаполнения = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	Если ЗначениеЗаполнено(АдресОтправителя) Тогда
		ПараметрыФормы.Вставить("АдресОтправителя", АдресОтправителя);
	КонецЕсли;	
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбораВида",
		ПараметрыФормы,
		Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.Ссылка);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта",
		ПараметрыФормы,
		Элементы.Список);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтбор()
	
	Если Не ПоказыватьУдаленные Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПометкаУдаления");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти