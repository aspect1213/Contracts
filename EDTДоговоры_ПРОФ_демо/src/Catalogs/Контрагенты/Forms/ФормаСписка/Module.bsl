
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект, Элементы.КомандыСлева);
	// Конец СтандартныеПодсистемы.Печать
	
	НастройкиФормы = ОбщегоНазначения.ХранилищеСистемныхНастроекЗагрузить(ИмяФормы + "/ТекущиеДанные", "");
	Если НастройкиФормы = Неопределено Или НастройкиФормы.Получить("ПоказыватьУдаленные") = Неопределено Тогда
		Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
		УстановитьОтбор();
	КонецЕсли;
	
	Если ПараметрыОтправкиПочтовогоСообщенияВызовСервера.ЕстьДоступныеПрофилиПочты() Тогда
		Элементы.АдресЭлектроннойПочты.ГиперссылкаЯчейки = Истина;
		Элементы.АдресЭлектроннойПочты.ЦветТекста = ЦветаСтиля.ЦветТекстаГиперссылки;
	КонецЕсли;
	
	ДоговорныеДокументы.СписокДокументовУсловноеОформлениеПомеченныхНаУдаление(Список);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки["ПоказыватьУдаленные"] <> Неопределено Тогда
		ПоказыватьУдаленные = Настройки["ПоказыватьУдаленные"];
		Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
		УстановитьОтбор();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЮрЛицо(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ЮридическоеФизическоеЛицо", ЮридическоеФизическоеЛицо);
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлемента",
		ПараметрыФормы,
		Элементы.Список,
		ЮридическоеФизическоеЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФизЛицо(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ЮридическоеФизическоеЛицо", ЮридическоеФизическоеЛицо);
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлемента",
		ПараметрыФормы,
		Элементы.Список,
		ЮридическоеФизическоеЛицо);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИП(Команда)
	
	ПараметрыФормы = Новый Структура;
	
	ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель");
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ЮридическоеФизическоеЛицо", ЮридическоеФизическоеЛицо);
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлемента",
		ПараметрыФормы,
		Элементы.Список,
		ЮридическоеФизическоеЛицо);
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ПоказыватьУдаленные(Команда)
	
	ПоказыватьУдаленные = Не ПоказыватьУдаленные;
	Элементы.ПоказыватьУдаленные.Пометка = ПоказыватьУдаленные;
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументы(Команда)
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Контрагент", Элементы.Список.ТекущиеДанные.Ссылка);
		
		ОткрытьФорму("Справочник.ДоговорныеДокументы.Форма.ФормаСписка",
			ПараметрыФормы,
			Элементы.Список);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПередачи(Команда)
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Контрагент", Элементы.Список.ТекущиеДанные.Ссылка);
		ОткрытьФорму("РегистрСведений.ЖурналПередачи.Форма.ФормаСпискаПоКонтрагенту", ПараметрыФормы, Элементы.Список,,,,,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	СтрокаВыбрана = (Элементы.Список.ТекущиеДанные <> Неопределено);
	
	Элементы.ОткрытьДокументы.Доступность = СтрокаВыбрана;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	
	ЗначенияЗаполнения = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбораВида",
		ПараметрыФормы,
		Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле <> Элементы.АдресЭлектроннойПочты
		Или Не ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.АдресЭлектроннойПочты) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Объекты = Новый Массив;
	Объекты.Добавить(Элементы.Список.ТекущиеДанные.Ссылка);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Объекты", Объекты);
	
	ОткрытьФорму(
		"Обработка.ПочтовоеСообщение.Форма.Форма",
		ПараметрыОткрытия,,
		Новый УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтбор()
	
	Если Не ПоказыватьУдаленные Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "ПометкаУдаления", Ложь,
			ВидСравненияКомпоновкиДанных.Равно, , Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ПометкаУдаления");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти