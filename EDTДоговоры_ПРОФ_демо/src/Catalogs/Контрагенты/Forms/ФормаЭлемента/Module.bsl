#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ВозможноЗаполнениеПоИНН = 
		(СтандартныеПодсистемыСервер.ПараметрыАутентификацииНаСайте() <> Неопределено)
		И (Объект.ЮридическоеФизическоеЛицо = ЮрЛицо() Или Объект.ЮридическоеФизическоеЛицо = Предприниматель());
	Элементы.ЗаполнитьПоИНН.Доступность = ВозможноЗаполнениеПоИНН;
	
	// Показываем заполнение по ИНН лишь для новых объектов и объектов, где ИНН еще не вводили.
	ПоказыватьЗаполнениеПоИНН = ВозможноЗаполнениеПоИНН
		И (Не ЗначениеЗаполнено(Объект.ИНН) Или Не ЗначениеЗаполнено(Объект.Ссылка));
		
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстЗаполнения = Параметры.ТекстЗаполнения;
		Если ЗначениеЗаполнено(ТекстЗаполнения) Тогда 
			
			Если ЭтоИНН(ТекстЗаполнения) Тогда 
				Объект.Наименование = "";
				Объект.ИНН = ТекстЗаполнения;
				Объект.ВсеРеквизитыСтрокой = "ИНН " + ТекстЗаполнения;
			Иначе
				Если Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо 
				 Или Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель Тогда  
					Объект.ФИО = ТекстЗаполнения;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) И Параметры.Свойство("АдресОтправителя") Тогда
		Объект.АдресЭлектроннойПочты = Параметры.АдресОтправителя;
	КонецЕсли;
	
	Если Параметры.Свойство("РежимВыбора") И Параметры.РежимВыбора Тогда
		Элементы.СоздатьДокумент.Видимость = Ложь;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Верх);
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Печать
	
	// Сохраним ИНН и КПП, чтобы проверять на дубли лишь при их изменении.
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ИННПриОткрытии = Объект.ИНН;
		КПППриОткрытии = Объект.КПП;
	КонецЕсли;
	
	// При передаче ИНН в параметрах заполнения заполняем по ИНН сразу.
	Если Не ЗначениеЗаполнено(Объект.Ссылка)
		И ЗначениеЗаполнено(Объект.ИНН)
		И ВозможноЗаполнениеПоИНН Тогда
		
		ТекстСообщения = "";
		Если РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(
				Объект.ИНН, СтрДлина(Объект.ИНН) = 10, ТекстСообщения) Тогда
			ЗаполнитьРеквизитыПоИНННаСервере(Объект.ИНН, ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ОткрытьДокументы.Доступность = (ЗначениеЗаполнено(Объект.Ссылка));
	
	ОбработатьФормуСогласноВидуКонтрагента();
	
	// Установим заголовок.
	Если Объект.Ссылка.Пустая() Тогда 
		АвтоЗаголовок = Ложь;
		Заголовок = Строка(Объект.ЮридическоеФизическоеЛицо) + " (создание)";
	Иначе
		АвтоЗаголовок = Ложь;
		Заголовок = Объект.Наименование + " (" + НРег(Объект.ЮридическоеФизическоеЛицо) + ")";
	КонецЕсли;
	
	// Установим фокус на первый незаполненный элемент с учетом возможности заполнения по ИНН.
	Если Не ЗначениеЗаполнено(Объект.ИНН)
		И Объект.ЮридическоеФизическоеЛицо = ЮрЛицо() 
		И ПоказыватьЗаполнениеПоИНН Тогда
		
		ТекущийЭлемент = Элементы.ИННЮрлицоЕстьЗаполнениеПоИНН;
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.ИНН)
		И Объект.ЮридическоеФизическоеЛицо = Предприниматель() 
		И ПоказыватьЗаполнениеПоИНН Тогда
		
		ТекущийЭлемент = Элементы.ИННИПЕстьЗаполнениеПоИНН;
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.Наименование)
		И НЕ ПоказыватьЗаполнениеПоИНН
		И Объект.ЮридическоеФизическоеЛицо = ЮрЛицо() Тогда
		
		ТекущийЭлемент = Элементы.НаименованиеЮрлицоНетЗаполненияПоИНН;
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.Наименование)
		И НЕ ПоказыватьЗаполнениеПоИНН
		И Объект.ЮридическоеФизическоеЛицо = Предприниматель() Тогда
		
		ТекущийЭлемент = Элементы.ФИОИПНетЗаполненияПоИНН;
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.ФИО)
		И Объект.ЮридическоеФизическоеЛицо = ФизЛицо() Тогда
		
		ТекущийЭлемент = Элементы.ФИОФизлицо;
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.НаименованиеПолное)
		И Объект.ЮридическоеФизическоеЛицо = ЮрЛицо() Тогда
		
		ТекущийЭлемент = Элементы.НаименованиеПолное;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ИННПриОткрытии = ТекущийОбъект.ИНН;
	КПППриОткрытии = ТекущийОбъект.КПП;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ЭтоНовый", Не ЗначениеЗаполнено(Объект.Ссылка));
	
	// Проверим на дубли.
	Если Не ПараметрыЗаписи.Свойство("СозданиеНовогоДублирующегоКорреспондента")
		И ((ЗначениеЗаполнено(Объект.ИНН) И Объект.ИНН <> ИННПриОткрытии)
			Или (ЗначениеЗаполнено(Объект.КПП) И Объект.КПП <> КПППриОткрытии)) Тогда
				
		АдресДублей = РаботаСКонтрагентамиВызовСервера.НайтиДублиКонтрагента(Объект.Ссылка,
			Объект.ИНН,
			Объект.КПП);
			
		Если ЭтоАдресВременногоХранилища(АдресДублей) Тогда
				
			Отказ = Истина;
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("АдресДублей", АдресДублей);
			
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"ПередЗаписьюПродолжение",
				ЭтотОбъект,
				ПараметрыЗаписи);
			
			ОткрытьФорму("Справочник.Контрагенты.Форма.СписокДублей",
				ПараметрыФормы,
				ЭтаФорма,,,,
				ОписаниеОповещения,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		КонецЕсли;
			
	КонецЕсли;
	
	Если Не Объект.Ссылка.Пустая() 
		И Объект.Наименование <> Строка(Объект.Ссылка) Тогда 
		ПараметрыЗаписи.Вставить("ИзменилосьНаименование", Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюПродолжение(Результат, ПараметрыЗаписи) Экспорт
	
	Если Результат = "ЗаписатьКонтрагента" Тогда
		ПараметрыЗаписи.Вставить("СозданиеНовогоДублирующегоКорреспондента", Истина);
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_Корреспондент", , Объект.Ссылка);
	Если ПараметрыЗаписи.Свойство("ИзменилосьНаименование") 
		И ПараметрыЗаписи.ИзменилосьНаименование Тогда 
		ОповеститьОбИзменении(Тип("СправочникСсылка.ДоговорныеДокументы"));
	КонецЕсли;
	
	Элементы.ОткрытьДокументы.Доступность = Истина;
	
	Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Изменение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		Закрыть(Объект.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ОповеститьОбИзменении(Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИННЮрлицоЕстьЗаполнениеПоИННПриИзменении(Элемент)
	
	ТекстСообщения = Неопределено;
	Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Объект.ИНН,
		Истина,
		ТекстСообщения) Тогда
		
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьРеквизитыПоИНННаКлиенте(Объект.ИНН);
	
КонецПроцедуры

&НаКлиенте
Процедура ИННИПЕстьЗаполнениеПоИННПриИзменении(Элемент)
	
	ТекстСообщения = Неопределено;
	Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Объект.ИНН,
		Ложь,
		ТекстСообщения) Тогда
		
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьРеквизитыПоИНННаКлиенте(Объект.ИНН);
	
КонецПроцедуры

&НаКлиенте
Процедура ФИОИПЕстьЗаполнениеПоИННОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст)
		И (Не ЗначениеЗаполнено(Объект.РасшифровкаПодписи)
			Или Объект.РасшифровкаПодписи = ПолучитьРасшифровкуПодписи(Объект.ФИО)) Тогда
		
		Объект.РасшифровкаПодписи = ПолучитьРасшифровкуПодписи(Текст);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФИОИПНетЗаполненияПоИННОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст)
		И (Не ЗначениеЗаполнено(Объект.РасшифровкаПодписи)
			Или Объект.РасшифровкаПодписи = ПолучитьРасшифровкуПодписи(Объект.ФИО)) Тогда
		
		Объект.РасшифровкаПодписи = ПолучитьРасшифровкуПодписи(Текст);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФИОФизлицоОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст)
		И (Не ЗначениеЗаполнено(Объект.РасшифровкаПодписи)
			Или Объект.РасшифровкаПодписи = ПолучитьРасшифровкуПодписи(Объект.ФИО)) Тогда
		
		Объект.РасшифровкаПодписи = ПолучитьРасшифровкуПодписи(Текст);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПаспортныеДанныеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ПаспортныеДанные)
		И Не ЗначениеЗаполнено(Объект.ВсеРеквизитыСтрокой) Тогда
		
		Объект.ВсеРеквизитыСтрокой = Объект.ПаспортныеДанные;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеРеквизитыСтрокойПриИзменении(Элемент)
	
	ИзвлечьИННКПП(Объект.ВсеРеквизитыСтрокой, Объект.ИНН, Объект.КПП, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьПодписывающегоЮЛАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст)
		Или Ожидание = 0 Тогда
		СписокВыбора = ПолучитьДанныеВыбораДолжностьПодписывающего(Текст);
		Если СписокВыбора.Количество() > 0 Тогда
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора = СписокВыбора;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДействуетНаОснованииЮЛАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст)
		Или Ожидание = 0 Тогда
		СписокВыбора = ПолучитьДанныеВыбораДействуетНаОсновании(Текст);
		Если СписокВыбора.Количество() > 0 Тогда
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора = СписокВыбора;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДействуетНаОснованииИПАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст)
		Или Ожидание = 0 Тогда
		СписокВыбора = ПолучитьДанныеВыбораДействуетНаОсновании(Текст);
		Если СписокВыбора.Количество() > 0 Тогда
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора = СписокВыбора;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоИНН(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.ИНН) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не заполнен ИНН.'"));
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРеквизитыПоИНННаКлиенте(Объект.ИНН);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокумент(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Или Модифицированность Тогда
		Если Не Записать() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Контрагент", Объект.Ссылка);
	
	ОткрытьФорму("Справочник.ДоговорныеДокументы.Форма.ФормаНового",
		ПараметрыФормы,
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументы(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Контрагент", Объект.Ссылка);
		
		ОткрытьФорму("Справочник.ДоговорныеДокументы.Форма.ФормаСписка",
			ПараметрыФормы,
			ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура();
	ПараметрыЗаписи.Вставить("Закрыть", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПередачи(Команда)
	
	ПараметрыФормы = Новый Структура("Контрагент", Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.ЖурналПередачи.Форма.ФормаСпискаПоКонтрагенту", ПараметрыФормы, ЭтаФорма,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ДобавитьРеквизит(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	
	Если Объект.ЮридическоеФизическоеЛицо = ФизЛицо() Тогда
		НаборСвойств = ПредопределенноеЗначение(
			"Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Контрагенты_ФизЛицо");
			
	ИначеЕсли Объект.ЮридическоеФизическоеЛицо = Предприниматель() Тогда
		НаборСвойств = ПредопределенноеЗначение(
			"Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Контрагенты_ИП");
		
	ИначеЕсли Объект.ЮридическоеФизическоеЛицо = ЮрЛицо() Тогда 
		НаборСвойств = ПредопределенноеЗначение(
			"Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Контрагенты_ЮрЛицо");
	КонецЕсли;
	
	ПараметрыФормы.Вставить("НаборСвойств", НаборСвойств);
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", Ложь);
	ПараметрыФормы.Вставить("ТекущийНаборСвойств", НаборСвойств);
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта",
		ПараметрыФормы, Элементы.ГруппаДополнительныеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.РаботаСКонтрагентами

// Краткое получение значения перечисления ЮридическоеФизическоеЛицо.
//
&НаКлиентеНаСервереБезКонтекста
Функция ЮрЛицо()
	
	Возврат ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	
КонецФункции

// Краткое получение значения перечисления ЮридическоеФизическоеЛицо.
//
&НаКлиентеНаСервереБезКонтекста
Функция Предприниматель()
	
	Возврат ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель");
	
КонецФункции

// Краткое получение значения перечисления ЮридическоеФизическоеЛицо.
//
&НаКлиентеНаСервереБезКонтекста
Функция ФизЛицо()
	
	Возврат ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	
КонецФункции

// Установка видимости, доступности и подсказок в зависимости от вида контрагента.
//
&НаСервере
Процедура ОбработатьФормуСогласноВидуКонтрагента()
	
	Если Объект.ЮридическоеФизическоеЛицо = ЮрЛицо() Тогда 
		
		Элементы.ПаспортныеДанные.Видимость = Ложь;
		Элементы.НаименованиеПолное.Видимость = Истина;
		
		Если ПоказыватьЗаполнениеПоИНН Тогда
			Элементы.СтраницыНаименованиеИНН.ТекущаяСтраница = Элементы.СтраницаЮрлицоЕстьЗаполнениеПоИНН;
		Иначе
			Элементы.СтраницыНаименованиеИНН.ТекущаяСтраница = Элементы.СтраницаЮрлицоНетЗаполненияПоИНН;
		КонецЕсли;
		Элементы.СтраницыПреамбулы.ТекущаяСтраница = Элементы.СтраницаПреамбулыЮЛ;
		Элементы.СтраницыПодписывает.ТекущаяСтраница = Элементы.СтраницаПодписываетЮЛ;
		
		Элементы.ВсеРеквизитыСтрокой.ПодсказкаВвода = 
			НСтр("ru = 'ИНН, КПП, адрес, банковский счет и проч.'");
		
		КлючНазначенияИспользования = "ЮридическоеЛицо";
		КлючСохраненияПоложенияОкна = КлючНазначенияИспользования;
		
	ИначеЕсли Объект.ЮридическоеФизическоеЛицо = Предприниматель() Тогда 
		
		Элементы.ПаспортныеДанные.Видимость = Ложь;
		Элементы.НаименованиеПолное.Видимость = Ложь;
		
		Если ПоказыватьЗаполнениеПоИНН Тогда
			Элементы.СтраницыНаименованиеИНН.ТекущаяСтраница = Элементы.СтраницаИПЕстьЗаполнениеПоИНН;
		Иначе
			Элементы.СтраницыНаименованиеИНН.ТекущаяСтраница = Элементы.СтраницаИПНетЗаполненияПоИНН;
		КонецЕсли;
		Элементы.СтраницыПреамбулы.ТекущаяСтраница = Элементы.СтраницаПреамбулыИП;
		Элементы.СтраницыПодписывает.ТекущаяСтраница = Элементы.СтраницаПодписываетИП;
		
		Элементы.ВсеРеквизитыСтрокой.ПодсказкаВвода = 
			НСтр("ru = 'ИНН, ОГРНИП, № свидетельства, адрес, банковский счет и проч.'");
		
		КлючНазначенияИспользования = "ИндивидуальныйПредприниматель";
		КлючСохраненияПоложенияОкна = КлючНазначенияИспользования;
		
	ИначеЕсли Объект.ЮридическоеФизическоеЛицо = ФизЛицо() Тогда 
		
		Элементы.ПаспортныеДанные.Видимость = Истина;
		Элементы.НаименованиеПолное.Видимость = Ложь;
		
		Элементы.СтраницыНаименованиеИНН.ТекущаяСтраница = Элементы.СтраницаФизлицо;
		Элементы.СтраницыПреамбулы.ТекущаяСтраница = Элементы.СтраницаПреамбулыФЛ;
		Элементы.СтраницыПодписывает.ТекущаяСтраница = Элементы.СтраницаПодписываетФЛ;
		
		Элементы.ВсеРеквизитыСтрокой.ПодсказкаВвода = 
			НСтр("ru = 'Паспорт, дата рождения, адрес, телефон и проч.'");
		
		КлючНазначенияИспользования = "ФизическоеЛицо";
		КлючСохраненияПоложенияОкна = КлючНазначенияИспользования;
		
	КонецЕсли;
	
КонецПроцедуры

// Начинает заполнение по ИНН.
//
&НаКлиенте
Процедура ЗаполнитьРеквизитыПоИНННаКлиенте(СтрокаИНН)
	
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("ЗаполнениеРеквизитовПоИНН");
	
	ОписаниеОшибки = "";
	ЗаполнитьРеквизитыПоИНННаСервере(СтрокаИНН, ОписаниеОшибки);
	
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		// Обработка ошибок
		Если ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда
			ТекстВопроса = НСтр("ru='Для автоматического заполнения реквизитов контрагентов
				|необходимо подключиться к Интернет-поддержке пользователей.
				|Подключиться сейчас?'");
			ДопПараметры = Новый Структура("СтрокаПоиска,ЗаполнениеПоИНН", СтрокаИНН, Истина);
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект, ДопПараметры);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		ИначеЕсли ОписаниеОшибки = "НеУказанПароль" Тогда
			ТекстВопроса = НСтр("ru='Необходимо указать пароль к Интернет-поддержке пользователей
				|и установить флажок ""Запомнить пароль"".
				|Указать сейчас?'");
			ДопПараметры = Новый Структура("СтрокаПоиска,ЗаполнениеПоИНН", СтрокаИНН, Истина);
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект, ДопПараметры);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		ИначеЕсли ОписаниеОшибки = "Сервис1СКонтрагентНеПодключен" Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ИдентификаторМестаВызова", "forma_kontragenta");
			ОткрытьФорму("ОбщаяФорма.Сервис1СКонтрагентНеПодключен", ПараметрыФормы, ЭтотОбъект);
		Иначе
			ПоказатьПредупреждение(, ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

// Заполняет реквизиты по ИНН, возвращая, возможно, описание ошибки.
//
&НаСервере
Процедура ЗаполнитьРеквизитыПоИНННаСервере(СтрокаИНН, ОписаниеОшибки = "")
	
	// Изменим вид контрагента согласно ИНН, если ранее он выбран ошибочно.
	Если СтрДлина(СтрокаИНН) = 12 И Объект.ЮридическоеФизическоеЛицо = ЮрЛицо() Тогда
		
		Объект.ЮридическоеФизическоеЛицо = Предприниматель();
		ОбработатьФормуСогласноВидуКонтрагента();
		
	ИначеЕсли СтрДлина(СтрокаИНН) = 10 И Объект.ЮридическоеФизическоеЛицо = Предприниматель() Тогда
		
		Объект.ЮридическоеФизическоеЛицо = ЮрЛицо();
		ОбработатьФормуСогласноВидуКонтрагента();
		
	КонецЕсли;
	
	ЭтоЮридическоеЛицо = (Объект.ЮридическоеФизическоеЛицо = ЮрЛицо());
	Если ЭтоЮридическоеЛицо Тогда
		РеквизитыКонтрагента = ДанныеЕдиныхГосРеестров.РеквизитыЮридическогоЛицаПоИНН(СтрокаИНН);
	Иначе
		РеквизитыКонтрагента = ДанныеЕдиныхГосРеестров.РеквизитыПредпринимателяПоИНН(СтрокаИНН);
	КонецЕсли;
	
	// Обработка ошибки.
	Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
		ОписаниеОшибки = РеквизитыКонтрагента.ОписаниеОшибки;
		ЗаписьЖурналаРегистрации(НСтр("ru ='Ошибка при заполнении по ИНН'", Метаданные.ОсновнойЯзык.КодЯзыка),
			УровеньЖурналаРегистрации.Ошибка,,,
			ОписаниеОшибки);
		Возврат;
	КонецЕсли;
	
	Если ЭтоЮридическоеЛицо Тогда
		
		Если РеквизитыКонтрагента.Свойство("КПП") И ЗначениеЗаполнено(РеквизитыКонтрагента.КПП) Тогда
			Объект.КПП = РеквизитыКонтрагента.КПП;
		Иначе
			Объект.КПП = Лев(Объект.ИНН, 4) + "01001";
		КонецЕсли;
		
		Объект.Наименование = РеквизитыКонтрагента.НаименованиеСокращенное;
		Объект.НаименованиеПолное = РеквизитыКонтрагента.НаименованиеПолное;
		
		Объект.ВсеРеквизитыСтрокой = Объект.Наименование;
		Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой + Символы.ПС;
		
		Если ЗначениеЗаполнено(Объект.КПП) Тогда
			Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой 
				+ СтрШаблон(НСтр("ru = 'ИНН %1, КПП %2'"), Объект.ИНН, Объект.КПП);
		Иначе
			Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой
				+ СтрШаблон(НСтр("ru = 'ИНН %1'"), Объект.ИНН);
		КонецЕсли;
		Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой + Символы.ПС;
		
		Если РеквизитыКонтрагента.Свойство("ЮридическийАдрес")
			И ТипЗнч(РеквизитыКонтрагента.ЮридическийАдрес) = Тип("Структура") Тогда
			
			Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой 
				+ РеквизитыКонтрагента.ЮридическийАдрес.Представление;
			Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой + Символы.ПС;
			
		КонецЕсли;
		
	Иначе // Предприниматель
		
		Объект.КПП = "";
		Объект.ФИО = РеквизитыКонтрагента.Наименование;
		
		Объект.ВсеРеквизитыСтрокой = Объект.ФИО;
		Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой + Символы.ПС;
		
		Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой
			+ СтрШаблон(НСтр("ru = 'ИНН %1'"), Объект.ИНН);
		Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой + Символы.ПС;
		
		Объект.РасшифровкаПодписи = РаботаСКонтрагентамиВызовСервера.ПолучитьРасшифровкуПодписи(Объект.ФИО);
		
		// ОГРНИП.
		Если РеквизитыКонтрагента.Свойство("РегистрационныйНомер")
			И ЗначениеЗаполнено(РеквизитыКонтрагента.РегистрационныйНомер) Тогда
			
			Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой 
				+ СтрШаблон(НСтр("ru = 'ОГРНИП %1'"), РеквизитыКонтрагента.РегистрационныйНомер);
			Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой + Символы.ПС;
			
		КонецЕсли;
		
		// Свидетельство.
		Если РеквизитыКонтрагента.Свойство("СвидетельствоОРегистрации")
			И ТипЗнч(РеквизитыКонтрагента.СвидетельствоОРегистрации) = Тип("Структура") Тогда
			
			Объект.ДействуетНаОсновании = СтрШаблон(НСтр("ru = 'свидетельства %1 %2 от %3'"),
				РеквизитыКонтрагента.СвидетельствоОРегистрации.Серия,
				РеквизитыКонтрагента.СвидетельствоОРегистрации.Номер,
				Формат(РеквизитыКонтрагента.СвидетельствоОРегистрации.Дата, "ДЛФ=D")
				);
			
			Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой 
				+ СтрШаблон(НСтр("ru = 'Свидетельство %1 %2 от %3'"),
				РеквизитыКонтрагента.СвидетельствоОРегистрации.Серия,
				РеквизитыКонтрагента.СвидетельствоОРегистрации.Номер,
				Формат(РеквизитыКонтрагента.СвидетельствоОРегистрации.Дата, "ДЛФ=D")
				);
			Объект.ВсеРеквизитыСтрокой = Объект.ВсеРеквизитыСтрокой + Символы.ПС;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитыКонтрагента.Свойство("Руководитель")
		И ЗначениеЗаполнено(РеквизитыКонтрагента.Руководитель) Тогда
		
		Если РеквизитыКонтрагента.Руководитель.Свойство("Должность")
			И ЗначениеЗаполнено(РеквизитыКонтрагента.Руководитель.Должность) Тогда
			Объект.ДолжностьПодписывающего = РеквизитыКонтрагента.Руководитель.Должность;
		КонецЕсли;
		
		Если РеквизитыКонтрагента.Руководитель.Свойство("Представление")
			И ЗначениеЗаполнено(РеквизитыКонтрагента.Руководитель.Представление) Тогда
			ФИО = РеквизитыКонтрагента.Руководитель.Представление;
			Объект.РасшифровкаПодписи = РаботаСКонтрагентамиВызовСервера.ПолучитьРасшифровкуПодписи(ФИО);
		Иначе
			ФИО = "";
		КонецЕсли;
			
		Если Прав(ВРег(СокрЛП(ФИО)), 3) = "ВНА" Тогда
			Пол = 2; // женский
		Иначе
			Пол = 1; // мужской
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ДолжностьПодписывающего) Тогда
			Должность = НРег(Лев(Объект.ДолжностьПодписывающего, 1)) + Сред(Объект.ДолжностьПодписывающего, 2);
			Объект.ВЛице = СтрШаблон("%1 %2",
				СклонениеПредставленийОбъектовВызовСервера.ПросклонятьПредставление(Должность, 2),
				СклонениеПредставленийОбъектовВызовСервера.ПросклонятьФИО(ФИО, 2, , Пол));
		Иначе
			Объект.ВЛице = 
				СклонениеПредставленийОбъектовВызовСервера.ПросклонятьФИО(ФИО, 2, , Пол);
		КонецЕсли;
		
	КонецЕсли;
		
	Модифицированность = Истина;

КонецПроцедуры

// Извлекает ИНН и КПП из текста реквизитов, сохраняя их отдельно для поиска дублей и обмена.
//
&НаКлиентеНаСервереБезКонтекста
Процедура ИзвлечьИННКПП(Знач ВсеРеквизитыСтрокой, ИНН, КПП, ЭтоЮридическоеЛицо = Неопределено)
	
	// Пробел в конце упрощает алгоритмы.
	ВсеРеквизитыСтрокой = ВсеРеквизитыСтрокой + " ";
	
	// Найдем кандидатов на ИНН.
	КандидатыНаИНН = Новый Массив;
	КандидатНаИНН = "";
	ПоискЦифры = Истина;
	
	Для НСимвола = 1 По СтрДлина(ВсеРеквизитыСтрокой) Цикл
		
		ТекущийСимвол = Сред(ВсеРеквизитыСтрокой, НСимвола, 1);
		
		Если Найти("0123456789", ТекущийСимвол) = 0 Тогда // не цифра
			
			ИННПодходит = (ЭтоЮридическоеЛицо = Неопределено
					И (СтрДлина(КандидатНаИНН) = 10
						Или СтрДлина(КандидатНаИНН) = 12));
			ИННПодходит = ИННПодходит Или (
				(ЭтоЮридическоеЛицо = Истина)
				И (СтрДлина(КандидатНаИНН) = 10));
			ИННПодходит = ИННПодходит Или (
				(ЭтоЮридическоеЛицо = Ложь)
				И (СтрДлина(КандидатНаИНН) = 12));
			Если ИННПодходит Тогда
				Если КандидатыНаИНН.Найти(КандидатНаИНН) = Неопределено Тогда
					КандидатыНаИНН.Добавить(КандидатНаИНН);
				КонецЕсли;
			КонецЕсли;
			КандидатНаИНН = "";
			ПоискЦифры = Истина;
			
		ИначеЕсли ПоискЦифры Тогда // цифра
			
			КандидатНаИНН = КандидатНаИНН + ТекущийСимвол;
			Если СтрДлина(КандидатНаИНН) > 12
				Или (СтрДлина(КандидатНаИНН) > 10 И ЭтоЮридическоеЛицо = Истина) Тогда
				КандидатНаИНН = "";
				ПоискЦифры = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Сразу удалим из кандидатов ИНН, не соответствующие требованиям.
	НКандидата = 0;
	Пока НКандидата <= КандидатыНаИНН.Количество() - 1 Цикл
		КандидатНаИНН = КандидатыНаИНН[НКандидата];
		ТекстСообщения = "";
		Если РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(
				КандидатНаИНН,
				?(ЭтоЮридическоеЛицо = Неопределено,
					СтрДлина(КандидатНаИНН) = 10,
					ЭтоЮридическоеЛицо),
				ТекстСообщения) Тогда
			НКандидата = НКандидата + 1;
		Иначе
			КандидатыНаИНН.Удалить(НКандидата);
		КонецЕсли;
	КонецЦикла;
	
	// Ничего не нашли?
	Если КандидатыНаИНН.Количество() = 0 Тогда
		ИНН = "";
		КПП = "";
		Возврат;
	КонецЕсли;
	
	// Вернем ИНН физлица, если он определен однозначно.
	Если КандидатыНаИНН.Количество() = 1
		И СтрДлина(КандидатыНаИНН[0]) = 12
		И ЭтоЮридическоеЛицо <> Истина Тогда
		ИНН = КандидатыНаИНН[0];
		КПП = "";
		ЭтоЮридическоеЛицо = Ложь;
		Возврат;
	КонецЕсли;
	
	// Найдем кандидатов на КПП. КПП на 04 и БИК неразличимы вне контекста.
	ПоискЦифры = Истина;
	КандидатыНаКПП = Новый Массив;
	КандидатНаКПП = "";
	КонтекстКПП = НСтр("ru = 'КПП'");
	КонфликтныйПрефикс = "04";
	
	Для НСимвола = 1 По СтрДлина(ВсеРеквизитыСтрокой) Цикл
		ТекущийСимвол = Сред(ВсеРеквизитыСтрокой, НСимвола, 1);
		Если Найти("0123456789", ТекущийСимвол) = 0 Тогда
			Если (СтрДлина(КандидатНаКПП) = 9) Тогда
				// Для КПП на 04 нужна дополнительная проверка.
				Если Лев(КандидатНаКПП, СтрДлина(КонфликтныйПрефикс)) = КонфликтныйПрефикс Тогда
					ЭтоТочноНеБИК = Ложь;
					ПозицияНачалаКПП = НСимвола - СтрДлина(КандидатНаКПП);
					ПозицияКонтекстаКПП = СтрНайти(ВсеРеквизитыСтрокой,
						КонтекстКПП,
						НаправлениеПоиска.СКонца,
						ПозицияНачалаКПП);
					Если ПозицияКонтекстаКПП <> 0 Тогда
						СимволыМежду = Сред(ВсеРеквизитыСтрокой,
							ПозицияКонтекстаКПП + СтрДлина(КонтекстКПП),
							ПозицияНачалаКПП - ПозицияКонтекстаКПП - СтрДлина(КонтекстКПП));
						Если ПустаяСтрока(СимволыМежду) Тогда
							ЭтоТочноНеБИК = Истина;
						КонецЕсли;
					КонецЕсли;
				Иначе
					ЭтоТочноНеБИК = Истина;
				КонецЕсли;
				Если КандидатыНаКПП.Найти(КандидатНаКПП) = Неопределено
					И ЭтоТочноНеБИК Тогда
					КандидатыНаКПП.Добавить(КандидатНаКПП);
				КонецЕсли;
			КонецЕсли;
			КандидатНаКПП = "";
			ПоискЦифры = Истина;
		ИначеЕсли ПоискЦифры Тогда
			КандидатНаКПП = КандидатНаКПП + ТекущийСимвол;
			Если СтрДлина(КандидатНаКПП) > 9 Тогда
				КандидатНаКПП = "";
				ПоискЦифры = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Вернем ИНН и КПП юрлица, если они однозначны.
	Если КандидатыНаИНН.Количество() = 1
		И КандидатыНаКПП.Количество() = 1
		И СтрДлина(КандидатыНаИНН[0]) = 10
		И ЭтоЮридическоеЛицо <> Ложь Тогда
		ИНН = КандидатыНаИНН[0];
		КПП = КандидатыНаКПП[0];
		ЭтоЮридическоеЛицо = Истина;
		Возврат;
	КонецЕсли;
	
	// Вернем хотя бы ИНН юрлица, если он однозначен.
	Если КандидатыНаИНН.Количество() = 1
		И КандидатыНаКПП.Количество() = 0
		И СтрДлина(КандидатыНаИНН[0]) = 10
		И ЭтоЮридическоеЛицо <> Ложь Тогда
		ИНН = КандидатыНаИНН[0];
		КПП = "";
		ЭтоЮридическоеЛицо = Истина;
		Возврат;
	КонецЕсли;
	
	// Отберем пары ИНН и КПП, совпадающие по коду ИФНС.
	СовпадающиеПары = Новый Массив;
	Для Каждого КандидатНаИНН Из КандидатыНаИНН Цикл
		Для Каждого КандидатНаКПП Из КандидатыНаКПП Цикл
			Если Лев(КандидатНаКПП, 4) = Лев(КандидатНаИНН, 4) Тогда
				СовпадающаяПара = Новый Структура("ИНН, КПП",
					КандидатНаИНН,
					КандидатНаКПП);
				СовпадающиеПары.Добавить(СовпадающаяПара);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Вернем ИНН и КПП совпадающих пар, если пара определена однозначно.
	Если СовпадающиеПары.Количество() = 1 Тогда
		ИНН = СовпадающиеПары[0].ИНН;
		КПП = СовпадающиеПары[0].КПП;
		Если ЭтоЮридическоеЛицо = Неопределено Тогда
			ЭтоЮридическоеЛицо = Истина;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	// Отсеем лишних кандидатов на ИНН по контексту.
	НКандидата = 0;
	Контекст = НСтр("ru = 'ИНН'");
	Пока НКандидата <= КандидатыНаИНН.Количество() - 1 Цикл
		КандидатНаИНН = КандидатыНаИНН[НКандидата];
		КонтекстНайден = Ложь;
		НачальнаяПозиция = 1;
		Пока НачальнаяПозиция <= СтрДлина(ВсеРеквизитыСтрокой) Цикл
			ПозицияИНН = СтрНайти(ВсеРеквизитыСтрокой,
				КандидатНаИНН,
				НаправлениеПоиска.СНачала,
				НачальнаяПозиция);
			Если ПозицияИНН = 0 Тогда
				Прервать;
			КонецЕсли;
			ПозицияКонтекста = СтрНайти(ВсеРеквизитыСтрокой,
				Контекст,
				НаправлениеПоиска.СКонца,
				ПозицияИНН);
			Если ПозицияКонтекста <> 0 Тогда
				СимволыМежду = Сред(ВсеРеквизитыСтрокой,
					ПозицияКонтекста + СтрДлина(Контекст),
					ПозицияИНН - ПозицияКонтекста - СтрДлина(Контекст));
				Если ПустаяСтрока(СимволыМежду) Тогда
					КонтекстНайден = Истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;
			НачальнаяПозиция = ПозицияИНН + СтрДлина(КандидатНаИНН);
		КонецЦикла;
		Если КонтекстНайден Тогда
			НКандидата = НКандидата + 1;
		Иначе
			КандидатыНаИНН.Удалить(НКандидата);
		КонецЕсли;
	КонецЦикла;
	
	// Ничего не осталось?
	Если КандидатыНаИНН.Количество() = 0 Тогда
		ИНН = "";
		КПП = "";
		Возврат;
	КонецЕсли;
	
	// Вернем ИНН физлица, если он определен однозначно.
	Если КандидатыНаИНН.Количество() = 1
		И СтрДлина(КандидатыНаИНН[0]) = 12
		И ЭтоЮридическоеЛицо <> Истина Тогда
		ИНН = КандидатыНаИНН[0];
		КПП = "";
		ЭтоЮридическоеЛицо = Ложь;
		Возврат;
	КонецЕсли;
	
	// Отсеем лишних кандидатов на КПП по контексту.
	НКандидата = 0;
	Контекст = НСтр("ru = 'КПП'");
	Пока НКандидата <= КандидатыНаКПП.Количество() - 1 Цикл
		КандидатНаКПП = КандидатыНаКПП[НКандидата];
		КонтекстНайден = Ложь;
		НачальнаяПозиция = 1;
		Пока НачальнаяПозиция <= СтрДлина(ВсеРеквизитыСтрокой) Цикл
			ПозицияКПП = СтрНайти(ВсеРеквизитыСтрокой,
				КандидатНаКПП,
				НаправлениеПоиска.СНачала,
				НачальнаяПозиция);
			Если ПозицияКПП = 0 Тогда
				Прервать;
			КонецЕсли;
			ПозицияКонтекста = СтрНайти(ВсеРеквизитыСтрокой,
				Контекст,
				НаправлениеПоиска.СКонца,
				ПозицияКПП);
			Если ПозицияКонтекста <> 0 Тогда
				СимволыМежду = Сред(ВсеРеквизитыСтрокой,
					ПозицияКонтекста + СтрДлина(Контекст),
					ПозицияКПП - ПозицияКонтекста - СтрДлина(Контекст));
				Если ПустаяСтрока(СимволыМежду) Тогда
					КонтекстНайден = Истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;
			НачальнаяПозиция = ПозицияКПП + СтрДлина(КандидатНаКПП);
		КонецЦикла;
		Если КонтекстНайден Тогда
			НКандидата = НКандидата + 1;
		Иначе
			КандидатыНаКПП.Удалить(НКандидата);
		КонецЕсли;
	КонецЦикла;
	
	// Вернем ИНН и КПП юрлица, если они однозначны.
	Если КандидатыНаИНН.Количество() = 1
		И КандидатыНаКПП.Количество() = 1
		И СтрДлина(КандидатыНаИНН[0]) = 10
		И ЭтоЮридическоеЛицо <> Ложь Тогда
		ИНН = КандидатыНаИНН[0];
		КПП = КандидатыНаКПП[0];
		ЭтоЮридическоеЛицо = Истина;
		Возврат;
	КонецЕсли;
	
	// Вернем хотя бы ИНН юрлица, если он однозначен.
	Если КандидатыНаИНН.Количество() = 1
		И КандидатыНаКПП.Количество() = 0
		И СтрДлина(КандидатыНаИНН[0]) = 10
		И ЭтоЮридическоеЛицо <> Ложь Тогда
		ИНН = КандидатыНаИНН[0];
		КПП = "";
		ЭтоЮридическоеЛицо = Истина;
		Возврат;
	КонецЕсли;
	
	// Снова отберем пары ИНН и КПП, совпадающие по коду ИФНС.
	СовпадающиеПары = Новый Массив;
	Для Каждого КандидатНаИНН Из КандидатыНаИНН Цикл
		Для Каждого КандидатНаКПП Из КандидатыНаКПП Цикл
			Если Лев(КандидатНаКПП, 4) = Лев(КандидатНаИНН, 4) Тогда
				СовпадающаяПара = Новый Структура("ИНН, КПП",
					КандидатНаИНН,
					КандидатНаКПП);
				СовпадающиеПары.Добавить(СовпадающаяПара);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Вернем ИНН и КПП совпадающих пар, если пара определена однозначно.
	Если СовпадающиеПары.Количество() = 1 Тогда
		ИНН = СовпадающиеПары[0].ИНН;
		КПП = СовпадающиеПары[0].КПП;
		Если ЭтоЮридическоеЛицо = Неопределено Тогда
			ЭтоЮридическоеЛицо = Истина;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	// Варианты исчерпаны.
	ИНН = "";
	КПП = "";
	
КонецПроцедуры

// Возвращает стандартную расшифровку подписи по ФИО.
//
&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьРасшифровкуПодписи(Знач ФИО)
	
	ФИО = СокрЛП(ФИО);
	МассивСлов = СтрРазделить(ФИО, " .", Ложь);
	
	Если МассивСлов.Количество() = 3 Тогда
		Возврат СтрШаблон("%1.%2. %3",
			Лев(МассивСлов[1], 1),
			Лев(МассивСлов[2], 1),
			МассивСлов[0]);
	Иначе
		Возврат ФИО;
	КонецЕсли;
	
КонецФункции

// Возвращает Истина, если переданная строка может быть ИНН.
//
&НаСервере
Функция ЭтоИНН(СтрокаИНН)
	Возврат ЗначениеЗаполнено(СтрокаИНН)
		И ТипЗнч(СтрокаИНН) = Тип("Строка")
		И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаИНН)
		И 
		(
		(СтрДлина(СтрокаИНН) = 10 И Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
		Или 
		(СтрДлина(СтрокаИНН) = 12 И 
			(Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель 
			ИЛИ Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо))
		);
КонецФункции

// Получает список вариантов должности подписывающего
//
&НаКлиенте
Функция ПолучитьДанныеВыбораДолжностьПодписывающего(Текст)
	
	ПолныйСписокВыбора = Новый СписокЗначений;
	ПолныйСписокВыбора.Добавить("Генеральный директор");
	ПолныйСписокВыбора.Добавить("Директор");
	ПолныйСписокВыбора.Добавить("Заведующий");
	ПолныйСписокВыбора.Добавить("Начальник отдела");
	ПолныйСписокВыбора.Добавить("Руководитель");
	ПолныйСписокВыбора.Добавить("Управляющий");
	
	СписокВыбора = Новый СписокЗначений;
	Для Каждого ЭлементСписка Из ПолныйСписокВыбора Цикл
		Если Лев(НРег(ЭлементСписка.Значение), СтрДлина(Текст)) = НРег(Текст) Тогда 
			СписокВыбора.Добавить(ЭлементСписка.Значение);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат СписокВыбора;
	
КонецФункции

// Получает список вариантов основания действий.
&НаКлиенте
Функция ПолучитьДанныеВыбораДействуетНаОсновании(Текст)
	
	ПолныйСписокВыбора = Новый СписокЗначений;
	Если Объект.ЮридическоеФизическоеЛицо = ЮрЛицо() Тогда 
		ПолныйСписокВыбора.Добавить("Устава");
		ПолныйСписокВыбора.Добавить("Доверенности №");
	ИначеЕсли Объект.ЮридическоеФизическоеЛицо = Предприниматель() Тогда 
		ПолныйСписокВыбора.Добавить("Свидетельства №");
	КонецЕсли;
	
	СписокВыбора = Новый СписокЗначений;
	Для Каждого ЭлементСписка Из ПолныйСписокВыбора Цикл
		Если Лев(НРег(ЭлементСписка.Значение), СтрДлина(Текст)) = НРег(Текст) Тогда 
			СписокВыбора.Добавить(ЭлементСписка.Значение);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат СписокВыбора;
	
КонецФункции

#КонецОбласти
