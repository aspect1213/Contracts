#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПередЗаписью(Отказ)
	
	Если Не Ссылка.Пустая() Тогда 
		ПредыдущееНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Наименование");
		Если Наименование <> ПредыдущееНаименование Тогда 
			ДополнительныеСвойства.Вставить("ПереименоватьСвязанныеДокументы", Истина);
		КонецЕсли;
	КонецЕсли;

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ЮридическоеФизическоеЛицо = Предприниматель() Тогда
		
		Если Лев(СокрЛП(ФИО), 3) = "ИП " Тогда
			ФИО = Сред(СокрЛП(ФИО), 4);
		КонецЕсли;
		Если Прав(СокрЛП(ФИО), 3) = " ИП" Тогда
			ФИО = Лев(СокрЛП(ФИО), СтрДлина(СокрЛП(ФИО)) - 3);
		КонецЕсли;
		
		Наименование = СтрШаблон("ИП %1", СокрЛП(ФИО));
		НаименованиеПолное = СтрШаблон("Индивидуальный предприниматель %1", СокрЛП(ФИО));
		
		ПаспортныеДанные = "";
		ВЛице = "";
		Если Не ЗначениеЗаполнено(РасшифровкаПодписи) Тогда
			РасшифровкаПодписи = РаботаСКонтрагентамиВызовСервера.ПолучитьРасшифровкуПодписи(ФИО);
		КонецЕсли;
		ДолжностьПодписывающего = "";
		
	ИначеЕсли ЮридическоеФизическоеЛицо = ФизЛицо() Тогда
		
		Наименование = СокрЛП(ФИО);
		НаименованиеПолное = СокрЛП(ФИО);
		
		ВЛице = "";
		ДействующегоНаОсновании = "";
		Если Не ЗначениеЗаполнено(РасшифровкаПодписи) Тогда
			РасшифровкаПодписи = РаботаСКонтрагентамиВызовСервера.ПолучитьРасшифровкуПодписи(ФИО);
		КонецЕсли;
		ДолжностьПодписывающего = "";
		
	ИначеЕсли ЮридическоеФизическоеЛицо = ЮрЛицо() Тогда
		
		ПаспортныеДанные = "";
		ФИО = "";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ДополнительныеСвойства.Свойство("ПереименоватьСвязанныеДокументы") 
		И ДополнительныеСвойства.ПереименоватьСвязанныеДокументы Тогда 
		ПереименоватьСвязанныеДокументы(Ссылка);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
		И ДанныеЗаполнения.Свойство("Наименование")
		И ДанныеЗаполнения.Свойство("ЮридическоеФизическоеЛицо")
		И (ДанныеЗаполнения.ЮридическоеФизическоеЛицо = ФизЛицо()
			Или ДанныеЗаполнения.ЮридическоеФизическоеЛицо = Предприниматель()) Тогда
			
		ФИО = ДанныеЗаполнения.Наименование;
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЮридическоеФизическоеЛицо = ФизЛицо()
		Или ЮридическоеФизическоеЛицо = Предприниматель() Тогда
		
		ПроверяемыеРеквизиты.Добавить("ФИО");
		
	Иначе // ЮрЛицо
		
		ПроверяемыеРеквизиты.Добавить("Наименование");
		
	КонецЕсли;
	
КонецПроцедуры

// Переименовывает документы при изменении контрагента.
//
Процедура ПереименоватьСвязанныеДокументы(Контрагент)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорныеДокументы.Ссылка
		|ИЗ
		|	Справочник.ДоговорныеДокументы КАК ДоговорныеДокументы
		|ГДЕ
		|	ДоговорныеДокументы.Контрагент = &Контрагент";
	Запрос.Параметры.Вставить("Контрагент", Контрагент);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Записать();
			РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		Исключение
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

// Краткое получение значения перечисления ЮридическоеФизическоеЛицо.
//
Функция ЮрЛицо()
	
	Возврат ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	
КонецФункции

// Краткое получение значения перечисления ЮридическоеФизическоеЛицо.
//
Функция Предприниматель()
	
	Возврат ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель");
	
КонецФункции

// Краткое получение значения перечисления ЮридическоеФизическоеЛицо.
//
Функция ФизЛицо()
	
	Возврат ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	
КонецФункции

#КонецЕсли