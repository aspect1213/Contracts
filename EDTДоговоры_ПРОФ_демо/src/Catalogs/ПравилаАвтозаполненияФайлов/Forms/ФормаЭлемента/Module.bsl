
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТипаВладельцаФайла = "";
	ВыполнятьЗаполнениеФайловНаСервере = Константы.ИзменениеФайловMSWordТолькоНаСервере.Получить();
	РеквизитыШаблона = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ШаблонФайла,
		"ТекущаяВерсияРасширение, ПолноеНаименование");
	ТипШаблона = РеквизитыШаблона.ТекущаяВерсияРасширение;
	ПолноеИмяШаблона = РеквизитыШаблона.ПолноеНаименование;
	РасширениеФайла = НРег(РеквизитыШаблона.ТекущаяВерсияРасширение);
	
	Если Параметры.Свойство("ДляКого") И ЗначениеЗаполнено(Параметры.ДляКого) Тогда 
		Объект.ДляКого = Параметры.ДляКого;
	КонецЕсли;
	
	ДвоичныеДанныеФайла = АвтозаполнениеШаблоновФайловСервер.ПолучитьДвоичныеДанныеФайла(Объект.ШаблонФайла);
	
	Дерево = АвтозаполнениеШаблоновФайловСерверПовтИсп.ЗаполнитьДеревоРеквизитовДляВыбора(
		Объект.ВладелецФайла, Объект.ДляКого);
	
	Если Параметры.Свойство("РежимСозданияДоговора") И Параметры.РежимСозданияДоговора Тогда 
		
		// В случае если в документе нет полей, то включим поля по умолчанию
		СписокПолейПоУмолчанию = Новый СписокЗначений;
		// Договорные документы
		СписокПолейПоУмолчанию.Добавить("ДатаДокумента", "ВладелецФайла");
		СписокПолейПоУмолчанию.Добавить("НомерДокумента", "ВладелецФайла");
		СписокПолейПоУмолчанию.Добавить("СуммаДокумента", "ВладелецФайла");
		СписокПолейПоУмолчанию.Добавить("СуммаПрописью", "ВладелецФайла");
		
		Если ДоговорныеДокументы.УчитыватьНДС() Тогда 
			СписокПолейПоУмолчанию.Добавить("СуммаНДСДокумента", "ВладелецФайла");
			СписокПолейПоУмолчанию.Добавить("СуммаНДСПрописью", "ВладелецФайла");
		КонецЕсли;
		
		// Контрагент
		СписокПолейПоУмолчанию.Добавить("ВсеРеквизитыСтрокой", "ВладелецФайла|Контрагент");
		СписокПолейПоУмолчанию.Добавить("РасшифровкаПодписи", "ВладелецФайла|Контрагент");
		
		Если Объект.ДляКого = Перечисления.ЮридическоеФизическоеЛицо.ИндивидуальныйПредприниматель Тогда 
			СписокПолейПоУмолчанию.Добавить("ФИО", "ВладелецФайла|Контрагент");
			СписокПолейПоУмолчанию.Добавить("ДействуетНаОсновании", "ВладелецФайла|Контрагент");
		ИначеЕсли Объект.ДляКого = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда 
			СписокПолейПоУмолчанию.Добавить("ФИО", "ВладелецФайла|Контрагент");
			СписокПолейПоУмолчанию.Добавить("ПаспортныеДанные", "ВладелецФайла|Контрагент");
		Иначе
			СписокПолейПоУмолчанию.Добавить("Наименование", "ВладелецФайла|Контрагент");
			СписокПолейПоУмолчанию.Добавить("ВЛице", "ВладелецФайла|Контрагент");
			СписокПолейПоУмолчанию.Добавить("ДействуетНаОсновании", "ВладелецФайла|Контрагент");
			СписокПолейПоУмолчанию.Добавить("ДолжностьПодписывающего", "ВладелецФайла|Контрагент");
		КонецЕсли;
		
		Заголовок = СтрШаблон(НСтр("ru = 'Настройка заполнения файла ""%1"" (создание)'"), ПолноеИмяШаблона);
		
		ЗначениеВРеквизитФормы(Дерево, "ОбъектДеревоРеквизитов");
		РежимСозданияДоговора = Параметры.РежимСозданияДоговора;
		
		ШаблонФайла = Объект.ШаблонФайла;
		ДанныеФайла = РаботаСФайламиВызовСервера.ДанныеФайла(ШаблонФайла.Ссылка);
		ТекущаяВерсия = ШаблонФайла.ТекущаяВерсия.ПолучитьОбъект();	
		ИмяСРасширениемФайла = ТекущаяВерсия.ПолноеНаименование + "." + ТекущаяВерсия.Расширение;
		
	Иначе 
		Заголовок = СтрШаблон(НСтр("ru = 'Настройка заполнения файла ""%1""'"), ПолноеИмяШаблона);
		ЗначениеВРеквизитФормы(Дерево, "ОбъектДеревоРеквизитов");
		
		Для Каждого Поле Из Объект.ДанныеДляАвтозаполнения Цикл 
			НоваяСтрока = ДанныеДляАвтозаполненияПриОткрытии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Поле);
		КонецЦикла;
		ДанныеДляАвтозаполненияПриОткрытии.Сортировать("НомерКолонкиТабличнойЧасти, ТермДляЗамены, ЗначениеЗамены"); 
	КонецЕсли;
	
	СписокПолей = Новый Массив();
	Если РасширениеФайла <> "doc" Тогда
		СписокПолей = АвтозаполнениеШаблоновФайловКлиентСервер.НайтиВсеПоляВФайлеMSWord(РасширениеФайла, ДвоичныеДанныеФайла);
		СписокПолейШаблона.Очистить();
		Для Каждого Поле Из СписокПолей Цикл
			НоваяСтрока = СписокПолейШаблона.Добавить();
			НоваяСтрока.Наименование = Поле;
		КонецЦикла;
	КонецЕсли;
	
	ПоказыватьУведомлениеОЗаписи = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ВидыДокументов", "ПоказыватьУведомлениеОПереносеПолейВФайл", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если НЕ ВебКлиент Тогда
		Если РасширениеФайла = "doc" Тогда
			Состояние(НСтр("ru = 'Выполняется поиск полей в шаблоне файла'"));
			СписокПолей = АвтозаполнениеШаблоновФайловКлиентСервер.НайтиВсеПоляВФайлеMSWord(
				РасширениеФайла, ДвоичныеДанныеФайла, Истина);
				
			СписокПолейШаблона.Очистить();
			Для Каждого Поле Из СписокПолей Цикл
				НоваяСтрока = СписокПолейШаблона.Добавить();
				НоваяСтрока.Наименование = Поле;
			КонецЦикла;
			Состояние(НСтр("ru = 'Поиск полей в шаблоне файла завершен'"));
		КонецЕсли;
	#КонецЕсли
	
	СопоставитьПоляНаКлиенте(СписокПолейШаблона);
	
	// Раскроем дерево
	КоллекцияСтрок = ОбъектДеревоРеквизитов.ПолучитьЭлементы();
	Для Каждого Строка Из КоллекцияСтрок Цикл
		ИдентификаторСтроки = Строка.ПолучитьИдентификатор();
		Элементы.ОбъектДеревоРеквизитов.Развернуть(ИдентификаторСтроки, Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если РежимСозданияДоговора И Не Объект.Ссылка.Пустая() Тогда 
		РежимСозданияДоговора = Ложь;
		СтандартнаяОбработка = Ложь;
		Закрыть(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	КоличествоКолонок = 0;
	
	Объект.ДанныеДляАвтозаполнения.Очистить();
	Контекст = Новый Структура;
	Контекст.Вставить("Дерево", ОбъектДеревоРеквизитов);
	Контекст.Вставить("ФормаДерево", Элементы.ОбъектДеревоРеквизитов);
	Контекст.Вставить("ДанныеДляЗаполнения", Новый СписокЗначений);
	ОбойтиДерево(ОбъектДеревоРеквизитов.ПолучитьЭлементы(), Контекст, "ВключеноПолеСоздать");
	КоличествоКолонок = 1;
	
	Для Каждого Элемент Из Контекст.ДанныеДляЗаполнения Цикл 
		ЭлементДерева = Элемент.Значение;
		
		Если ЭлементДерева.КоличествоПолей = 1 Или ЭлементДерева.РеквизитТабличнойЧасти Тогда 
			НоваяСтрока = Объект.ДанныеДляАвтозаполнения.Добавить();
			Если ЭлементДерева.ДополнительныйРеквизит Тогда 
				ЗначениеЗамены = "{" + ЭлементДерева.ОбъектРодитель + "|" + ЭлементДерева.Описание + "}";
			Иначе 
				ЗначениеЗамены = "{" + ЭлементДерева.ОбъектРодитель + "|" + ЭлементДерева.Наименование + "}";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ЭлементДерева.ПолеФайла) Тогда 
				НоваяСтрока.ТермДляЗамены = ЭлементДерева.ПолеФайла;
			ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) 
				И Не ЭлементДерева.ДополнительныйРеквизит Тогда 
				НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5) 
					+ "_" + Лев(ЭлементДерева.Наименование, 14);
			Иначе
				НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.Наименование, 20);
			КонецЕсли;
			
			НоваяСтрока.ЗначениеЗамены = ЗначениеЗамены;
			НоваяСтрока.РеквизитТабличнойЧасти = ЭлементДерева.РеквизитТабличнойЧасти;
			НоваяСтрока.НомерКолонкиТабличнойЧасти = ЭлементДерева.НомерКолонкиТабличнойЧасти;
			НоваяСтрока.ОписаниеПоляЗамены = ЭлементДерева.ОписаниеПоляЗамены;
			НоваяСтрока.ТипЗначенияЗамены = ЭлементДерева.Тип;
			
			Если ЗначениеЗаполнено(ЭлементДерева.ФорматСвойства) Тогда 
				НоваяСтрока.ФорматЗначенияЗамены = ЭлементДерева.ФорматСвойства;
			Иначе 
				Если ЭлементДерева.Тип = "Дата" Тогда 
					Если СтрНайти(ЭлементДерева.Наименование, НСтр("ru = 'ДатаДокумента'")) > 0 Тогда 
						НоваяСтрока.ФорматЗначенияЗамены = "ДЛФ='DD'";
					Иначе 
						НоваяСтрока.ФорматЗначенияЗамены = "ДЛФ='D'";
					КонецЕсли;
				КонецЕсли;
				
				Если ЭлементДерева.Тип = "Число" Тогда 
					Если СтрНайти(ЭлементДерева.Наименование, НСтр("ru = 'Цена'")) > 0 Или 
						СтрНайти(ЭлементДерева.Наименование, НСтр("ru = 'Сумма'")) > 0 Тогда 
						НоваяСтрока.ФорматЗначенияЗамены = "ЧДЦ = '2'";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если НоваяСтрока.РеквизитТабличнойЧасти Тогда 
				НоваяСтрока.НомерКолонкиТабличнойЧасти = КоличествоКолонок;
				КоличествоКолонок = КоличествоКолонок + 1;
			КонецЕсли;
			
		Иначе 
			Счетчик = 1;
			Пока Счетчик <= ЭлементДерева.КоличествоПолей Цикл 
				НоваяСтрока = Объект.ДанныеДляАвтозаполнения.Добавить();
				Если ЭлементДерева.ДополнительныйРеквизит Тогда 
					ЗначениеЗамены = "{" + ЭлементДерева.ОбъектРодитель + "|" + ЭлементДерева.Описание + "}";
				Иначе 
					ЗначениеЗамены = "{" + ЭлементДерева.ОбъектРодитель + "|" + ЭлементДерева.Наименование + "}";
				КонецЕсли;
				
				Если Счетчик = 1 Тогда 
					Если ЗначениеЗаполнено(ЭлементДерева.ПолеФайла) Тогда 
						МассивПолей = СтрРазделить(ЭлементДерева.ПолеФайла, ", ", Ложь);
						ЗначениеПоля = "";
						
						Если МассивПолей.Количество() >= Счетчик Тогда 
							ЗначениеПоля = МассивПолей[Счетчик - 1];
						КонецЕсли;
						
						Если ЗначениеЗаполнено(ЗначениеПоля) Тогда 
							НоваяСтрока.ТермДляЗамены = ЗначениеПоля;
							
						ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) 
							И Не ЭлементДерева.ДополнительныйРеквизит Тогда 
							НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5) 
								+ "_" + Лев(ЭлементДерева.Наименование, 14);
						Иначе
							НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.Наименование, 20);
						КонецЕсли;
						
					ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) 
						И Не ЭлементДерева.ДополнительныйРеквизит Тогда 
						НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5) 
							+ "_" + Лев(ЭлементДерева.Наименование, 14);
					Иначе
						НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.Наименование, 20);
					КонецЕсли;
					
				Иначе 
					Если ЗначениеЗаполнено(ЭлементДерева.ПолеФайла) Тогда 
						МассивПолей = СтрРазделить(ЭлементДерева.ПолеФайла, ", ", Ложь);
						ЗначениеПоля = "";
						
						Если МассивПолей.Количество() >= Счетчик Тогда 
							ЗначениеПоля = МассивПолей[Счетчик - 1];
						КонецЕсли;
						
						Если ЗначениеЗаполнено(ЗначениеПоля) Тогда 
							НоваяСтрока.ТермДляЗамены = ЗначениеПоля;
							
						ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) 
							И Не ЭлементДерева.ДополнительныйРеквизит Тогда 
							НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5) 
								+ "_" + Лев(ЭлементДерева.Наименование, 13) + СокрЛП(Счетчик);
							
						Иначе
							НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.Наименование, 19) + СокрЛП(Счетчик);
							
						КонецЕсли;
						
					ИначеЕсли ЗначениеЗаполнено(ЭлементДерева.РеквизитРодитель) 
						И Не ЭлементДерева.ДополнительныйРеквизит Тогда 
						НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.РеквизитРодитель, 5) 
							+ "_" + Лев(ЭлементДерева.Наименование, 13) + СокрЛП(Счетчик);
						
					ИначеЕсли ЭлементДерева.ДополнительныйРеквизит Тогда 
						НоваяСтрока.ТермДляЗамены = "Д" + СокрЛП(Счетчик) + Прав(ЭлементДерева.Наименование, 18);
					Иначе 
						НоваяСтрока.ТермДляЗамены = Лев(ЭлементДерева.Наименование, 19) + СокрЛП(Счетчик);
					КонецЕсли;
				КонецЕсли;
				
				НоваяСтрока.ЗначениеЗамены = ЗначениеЗамены;
				НоваяСтрока.РеквизитТабличнойЧасти = ЭлементДерева.РеквизитТабличнойЧасти;
				НоваяСтрока.НомерКолонкиТабличнойЧасти = ЭлементДерева.НомерКолонкиТабличнойЧасти;
				НоваяСтрока.ОписаниеПоляЗамены = ЭлементДерева.ОписаниеПоляЗамены;
				НоваяСтрока.ТипЗначенияЗамены = ЭлементДерева.Тип;
				
				Если ЗначениеЗаполнено(ЭлементДерева.ФорматСвойства) Тогда 
					НоваяСтрока.ФорматЗначенияЗамены = ЭлементДерева.ФорматСвойства;
				Иначе 
					Если ЭлементДерева.Тип = "Дата" Тогда 
						Если СтрНайти(ЭлементДерева.Наименование, НСтр("ru = 'ДатаДокумента'")) > 0 Тогда 
							НоваяСтрока.ФорматЗначенияЗамены = "ДЛФ='DD'";
						Иначе 
							НоваяСтрока.ФорматЗначенияЗамены = "ДЛФ='D'";
						КонецЕсли;
					КонецЕсли;
					
					Если ЭлементДерева.Тип = "Число" Тогда 
						Если СтрНайти(ЭлементДерева.Наименование, НСтр("ru = 'Цена'")) > 0 Или 
							СтрНайти(ЭлементДерева.Наименование, НСтр("ru = 'Сумма'")) > 0 Тогда 
							НоваяСтрока.ФорматЗначенияЗамены = "ЧДЦ = '2'";
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Счетчик = Счетчик + 1;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	#Если НЕ ВебКлиент Тогда
		
		Если РасширениеФайла = "doc" Или РасширениеФайла = "docx" Тогда
			РасширениеШаблона = НРег(ТипШаблона);
			
			Если Объект.ДанныеДляАвтозаполнения.Количество() > 0 Тогда 
				НовыеДанные = Объект.ДанныеДляАвтозаполнения;
				НовыеДанные.Сортировать("НомерКолонкиТабличнойЧасти, ТермДляЗамены, ЗначениеЗамены");
				Если ОбщегоНазначенияДокументооборотКлиентСервер.ЕстьОтличияВТаблицах(
					ДанныеДляАвтозаполненияПриОткрытии, 
					НовыеДанные,
					"ТермДляЗамены, ЗначениеЗамены, ФорматЗначенияЗамены, ТипЗначенияЗамены,
					|РеквизитТабличнойЧасти, НомерКолонкиТабличнойЧасти, ОписаниеПоляЗамены") Тогда 
					
					Состояние(НСтр("ru = 'В шаблоне файла осуществляется поиск указанных полей. Пожалуйста, подождите...'"));
					
					МассивПолейДляУдаления = Новый Массив;
					Для Каждого Строка Из ДанныеДляАвтозаполненияПриОткрытии Цикл 
						СтрокиДанных = Объект.ДанныеДляАвтозаполнения.НайтиСтроки(
							Новый Структура("ЗначениеЗамены, ТермДляЗамены, ОписаниеПоляЗамены, ТипЗначенияЗамены",
							Строка.ЗначениеЗамены, Строка.ТермДляЗамены, Строка.ОписаниеПоляЗамены, Строка.ТипЗначенияЗамены));
						Если СтрокиДанных.Количество() = 0 Тогда 
							МассивПолейДляУдаления.Добавить(Новый Структура("ПолеУдаления, РеквизитТабличнойЧасти", 
								Строка.ТермДляЗамены, Строка.РеквизитТабличнойЧасти));
						КонецЕсли;
					КонецЦикла;
					
					АвтозаполнениеШаблоновФайловКлиент.ПроверитьНаличиеИДобавитьПоляВФайлеMSWord(
						ПолноеИмяШаблона, РасширениеШаблона, Объект.ДанныеДляАвтозаполнения, 
						Объект.ШаблонФайла, ЭтаФорма.УникальныйИдентификатор, МассивПолейДляУдаления,
						ПоказыватьУведомлениеОЗаписи);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	#КонецЕсли
	
	Объект.Наименование = Объект.ШаблонФайла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	// Возможно НДС больше не используют, поэтому константу нужно снять.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПравилаАвтозаполненияФайловДанныеДляАвтозаполнения.Ссылка КАК ЗначениеЗамены
		|ИЗ
		|	Справочник.ПравилаАвтозаполненияФайлов.ДанныеДляАвтозаполнения КАК ПравилаАвтозаполненияФайловДанныеДляАвтозаполнения
		|ГДЕ
		|	НЕ ПравилаАвтозаполненияФайловДанныеДляАвтозаполнения.Ссылка.ПометкаУдаления
		|	И ВЫРАЗИТЬ(ПравилаАвтозаполненияФайловДанныеДляАвтозаполнения.ЗначениеЗамены КАК СТРОКА(200)) ПОДОБНО ""%НДС%""";
		
	Если Запрос.Выполнить().Пустой() И ДоговорныеДокументы.УчитыватьНДС() Тогда 
		Константы.ЯвляетсяПлательщикомНДС.Установить(Ложь);
	ИначеЕсли Не Запрос.Выполнить().Пустой() И Не ДоговорныеДокументы.УчитыватьНДС() Тогда 
		Константы.ЯвляетсяПлательщикомНДС.Установить(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Изменение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		Закрыть(Объект.Ссылка);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	РасширенныйПросмотр = Настройки["РасширенныйПросмотр"];
	Элементы.ФормаРасширенныйПросмотр.Пометка = РасширенныйПросмотр;
	
	Если РасширенныйПросмотр Тогда 
		Элементы.ОбъектДеревоРеквизитовПолеФайла.Видимость = Истина;
	Иначе 
		Элементы.ОбъектДеревоРеквизитовПолеФайла.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъектДеревоРеквизитов

&НаКлиенте
Процедура ОбъектДеревоРеквизитовПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("УстановитьДоступностьПеремещения", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовПолеФайлаПриИзменении(Элемент)
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ПолеФайла) Тогда 
			ТекущиеДанные.СоздатьПоле = Истина;
			ТекущиеДанные.КоличествоПолей = ТекущиеДанные.КоличествоПолей + 1;
		Иначе 
			ТекущиеДанные.СоздатьПоле = Ложь;
			ТекущиеДанные.КоличествоПолей = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовПолеФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФайлШаблон", Объект.ШаблонФайла);
	ПараметрыФормы.Вставить("СписокПолей", СписокПолейШаблона);
	ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		ПараметрыФормы.МножественныйВыбор = 
			ТекущиеДанные.КоличествоПолей > 1 И Не ТекущиеДанные.РеквизитТабличнойЧасти;
	КонецЕсли;
	
	ОткрытьФорму(
		"Справочник.ПравилаАвтозаполненияФайлов.Форма.ФормаВыбораПоляВФайле", 
		ПараметрыФормы, 
		Элемент ,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовПолеФайлаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		ТекущиеДанные.ПолеФайла = ВыбранноеЗначение.НаименованиеПоля;
		ТекущиеДанные.СоздатьПоле = Истина;
	КонецЕсли;
	
	Если ВыбранноеЗначение.СписокПолей.Количество() > 0 Тогда
		СписокПолейШаблона.Очистить();
		Для Каждого Поле Из ВыбранноеЗначение.СписокПолей Цикл
			НоваяСтрока = СписокПолейШаблона.Добавить();
			НоваяСтрока.Наименование = Поле.Наименование;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовСоздатьПолеПриИзменении(Элемент)
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		ЭлементыТабЧасти = ТекущиеДанные.ПолучитьЭлементы();
		ЭтоГрупповойЭлемент = Ложь;
		Для Каждого ЭлементТаблицы Из ЭлементыТабЧасти Цикл 
			ЭлементТаблицы.СоздатьПоле = ТекущиеДанные.СоздатьПоле;
			ЭтоГрупповойЭлемент = Истина;
			Если ТекущиеДанные.СоздатьПоле И Не ТекущиеДанные.РеквизитТабличнойЧасти Тогда 
				ЭлементТаблицы.КоличествоПолей = 1;
			Иначе 
				ЭлементТаблицы.КоличествоПолей = 0;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ЭтоГрупповойЭлемент Тогда 
			Если ТекущиеДанные.СоздатьПоле И Не ТекущиеДанные.РеквизитТабличнойЧасти Тогда 
				ТекущиеДанные.КоличествоПолей = ТекущиеДанные.КоличествоПолей + 1;
			Иначе 
				ТекущиеДанные.КоличествоПолей = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектДеревоРеквизитовКоличествоПолейПриИзменении(Элемент)
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		
		Если ТекущиеДанные.РеквизитТабличнойЧасти Тогда 
			ТекущиеДанные.КоличествоПолей = 0;
			Возврат;
		КонецЕсли;
		
		ЭлементыТабЧасти = ТекущиеДанные.ПолучитьЭлементы();
		ЭтоГрупповойЭлемент = Ложь;
		
		Если ТекущиеДанные.КоличествоПолей = 0 Тогда 
			Для Каждого ЭлементТаблицы Из ЭлементыТабЧасти Цикл 
				ЭтоГрупповойЭлемент = Истина;
				ЭлементТаблицы.КоличествоПолей = ТекущиеДанные.КоличествоПолей;
				
				Если ЭлементТаблицы.СоздатьПоле Тогда 
					ЭлементТаблицы.СоздатьПоле = Ложь;
				КонецЕсли;
			КонецЦикла;
			
			Если ТекущиеДанные.СоздатьПоле Тогда 
				ТекущиеДанные.СоздатьПоле = Ложь;
			КонецЕсли;
		Иначе 
			Для Каждого ЭлементТаблицы Из ЭлементыТабЧасти Цикл 
				ЭтоГрупповойЭлемент = Истина;
				ЭлементТаблицы.КоличествоПолей = ТекущиеДанные.КоличествоПолей;
				
				Если Не ЭлементТаблицы.СоздатьПоле Тогда 
					ЭлементТаблицы.СоздатьПоле = Истина;
				КонецЕсли;
			КонецЦикла;
			
			Если Не ТекущиеДанные.СоздатьПоле Тогда 
				ТекущиеДанные.СоздатьПоле = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РасширенныйПросмотр(Команда)
	
	РасширенныйПросмотр = Не РасширенныйПросмотр;
	Элементы.ФормаРасширенныйПросмотр.Пометка = РасширенныйПросмотр;
	
	Если РасширенныйПросмотр Тогда 
		Элементы.ОбъектДеревоРеквизитовПолеФайла.Видимость = Истина;
	Иначе 
		Элементы.ОбъектДеревоРеквизитовПолеФайла.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗаписи = Новый Структура();
	ПараметрыЗаписи.Вставить("Закрыть", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьДоступностьПеремещения()
	
	Если Элементы.ОбъектДеревоРеквизитов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.ОбъектДеревоРеквизитов.ТекущиеДанные;
		
		Если ТекущиеДанные.РеквизитТабличнойЧасти Тогда
			Элементы.ОбъектДеревоПереместитьВверх.Доступность = Истина;
			Элементы.ОбъектДеревоПереместитьВниз.Доступность = Истина;
		Иначе 
			Элементы.ОбъектДеревоПереместитьВверх.Доступность = Ложь;
			Элементы.ОбъектДеревоПереместитьВниз.Доступность = Ложь;
		КонецЕсли;
		
	Иначе 
		Элементы.ОбъектДеревоПереместитьВверх.Доступность = Ложь;
		Элементы.ОбъектДеревоПереместитьВниз.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьПоляНаКлиенте(СписокПолей)
	
	Контекст = Новый Структура;
	Контекст.Вставить("Дерево", ОбъектДеревоРеквизитов);
	Контекст.Вставить("ФормаДерево", Элементы.ОбъектДеревоРеквизитов);
	
	Если СписокПолей.Количество() > 0 Тогда
		Контекст.Вставить("СписокПолей", СписокПолей);
		Контекст.Вставить("ПроверитьРодителя", Ложь);
		
	ИначеЕсли РежимСозданияДоговора Тогда 
		Контекст.Вставить("СписокПолей", СписокПолейПоУмолчанию);
		Контекст.Вставить("ПроверитьРодителя", Истина);
		
	Иначе 
		Контекст.Вставить("СписокПолей", Новый СписокЗначений);
		Контекст.Вставить("ПроверитьРодителя", Истина);
		
	КонецЕсли;
	
	ОбойтиДерево(ОбъектДеревоРеквизитов.ПолучитьЭлементы(), Контекст, "ВключитьПоля");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбойтиДерево(ДеревоЭлементы, Контекст, ИмяПроцедуры)
	
	Для Каждого Элемент Из ДеревоЭлементы Цикл
		ПодчиненныеУзлы = Элемент.ПолучитьЭлементы();
		Результат = Вычислить(ИмяПроцедуры + "(Элемент, Контекст)");
		
		Если ПодчиненныеУзлы.Количество() > 0 Тогда
			ОбойтиДерево(ПодчиненныеУзлы, Контекст, ИмяПроцедуры);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ВключеноПолеСоздать(Элемент, Контекст)
	
	ИдентификаторСтроки = Элемент.ПолучитьИдентификатор();
	ТекДанные = Контекст.Дерево.НайтиПоИдентификатору(ИдентификаторСтроки);
	Ключ = ТекДанные;
	
	Если ТекДанные.СоздатьПоле = Истина И ЗначениеЗаполнено(ТекДанные.Тип) Тогда
		Контекст.ДанныеДляЗаполнения.Добавить(Ключ);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ВключитьПоля(Элемент, Контекст)
	
	ИдентификаторСтроки = Элемент.ПолучитьИдентификатор();
	ТекДанные = Контекст.Дерево.НайтиПоИдентификатору(ИдентификаторСтроки);
	СписокПолей = Контекст.СписокПолей;
	
	Если Контекст.ПроверитьРодителя Тогда 
		Для Каждого Поле Из СписокПолей Цикл 
			Если ТекДанные.Наименование = Поле.Значение И ТекДанные.ОбъектРодитель = Поле.Представление Тогда
				ТекДанные.СоздатьПоле = Истина;
				ТекДанные.КоличествоПолей = ТекДанные.КоличествоПолей + 1;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если ЗначениеЗаполнено(ТекДанные.РеквизитРодитель) И Не ТекДанные.ДополнительныйРеквизит Тогда 
			ПолеПоиска = Лев(ТекДанные.РеквизитРодитель, 5) + "_" + Лев(ТекДанные.Наименование, 14);
		Иначе
			ПолеПоиска = Лев(ТекДанные.Наименование, 20);
		КонецЕсли;
		
		ЗначениеПоля = СписокПолей.НайтиСтроки(Новый Структура("Наименование", ПолеПоиска));
		Если ЗначениеПоля.Количество() > 0 Тогда
			ТекДанные.ПолеФайла = ЗначениеПоля[0].Наименование;
			ТекДанные.СоздатьПоле = Истина;
			ТекДанные.КоличествоПолей = ТекДанные.КоличествоПолей + 1;
			
			Если Не ТекДанные.РеквизитТабличнойЧасти Тогда 
				Если ТекДанные.ДополнительныйРеквизит Тогда 
					ДопПолеПоиска = "Д%1" + Прав(ПолеПоиска, 18);
				ИначеЕсли СтрДлина(ПолеПоиска) = 20 Тогда 
					ДопПолеПоиска = Лев(ПолеПоиска, 19) + "%1";
				Иначе 
					ДопПолеПоиска = ПолеПоиска + "%1";
				КонецЕсли;
				Для Ит = 2 По 9 Цикл 
					 
					ЗначениеМножественногоПоля = СписокПолей.НайтиСтроки(
						Новый Структура("Наименование", СтрШаблон(ДопПолеПоиска, СокрЛП(Ит))));
						
					Если ЗначениеМножественногоПоля.Количество() > 0 Тогда 
						ТекДанные.ПолеФайла = ТекДанные.ПолеФайла + ", " + ЗначениеМножественногоПоля[0].Наименование;
						ТекДанные.КоличествоПолей = ТекДанные.КоличествоПолей + 1;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		Иначе 
			МассивСтрокПоиска = ДанныеДляАвтозаполненияПриОткрытии.НайтиСтроки(
				Новый Структура("ТермДляЗамены", ПолеПоиска));
			Для Каждого СтрокаПоиска Из МассивСтрокПоиска Цикл 
				ДанныеДляАвтозаполненияПриОткрытии.Удалить(СтрокаПоиска);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

#КонецОбласти
